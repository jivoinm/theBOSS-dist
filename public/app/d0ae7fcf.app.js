"use strict";angular.module("theBossApp",["ngCookies","ngResource","ngSanitize","btford.socket-io","ui.router","ui.bootstrap","ui.calendar","toaster","angularMoment","underscore","ngDragDrop","angularFileUpload"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider",function($stateProvider,$urlRouterProvider,$locationProvider,$httpProvider){$urlRouterProvider.otherwise("/"),$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]).constant("theBossSettings",{orderChangedEvent:"order-changed",userAutoCompleteSelectedEvent:"user-selected",previewModeEvent:"preview-mode",timeZone:"02:00",taskStatuses:{New:"new",InProgress:"in progress",Finished:"finished",Blocked:"blocked"}}).factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function($rootScope,$q,$cookieStore,$location){return{request:function(config){return config.headers=config.headers||{},$cookieStore.get("token")&&(config.headers.Authorization="Bearer "+$cookieStore.get("token")),config},responseError:function(response){return 401===response.status?($location.path("/login"),$cookieStore.remove("token"),$q.reject(response)):$q.reject(response)}}}]).run(["$rootScope","$location","Auth",function($rootScope,$location,Auth){$rootScope.$on("$stateChangeStart",function(event,next){Auth.isLoggedInAsync(function(loggedIn){next.authenticate&&!loggedIn&&$location.path("/login")})})}]),angular.module("theBossApp").config(["$stateProvider",function($stateProvider){$stateProvider.state("login",{url:"/login",templateUrl:"app/account/login/login.html",controller:"LoginCtrl"}).state("signup",{url:"/signup",templateUrl:"app/account/signup/signup.html",controller:"SignupCtrl"}).state("users",{url:"/user",templateUrl:"app/account/user/user.html",controller:"UserCtrl"}).state("usersByRole",{url:"/user/:role",templateUrl:"app/account/user/user.html",controller:"UserCtrl"}).state("usersByGroup",{url:"/user/group/:group",templateUrl:"app/account/user/user.html",controller:"UserCtrl"}).state("settings",{url:"/settings",templateUrl:"app/account/settings/settings.html",controller:"SettingsCtrl",authenticate:!0})}]),angular.module("theBossApp").controller("LoginCtrl",["$scope","Auth","$location","$window","$cookieStore",function($scope,Auth,$location,$window,$cookieStore){$scope.user={},$scope.errors={},$scope.login=function(form){$scope.submitted=!0,form.$valid&&Auth.login({email:$scope.user.email,password:$scope.user.password}).then(function(){var cookieKey="ignore-services-"+$scope.user.email;$cookieStore.remove(cookieKey),$location.path("/calendar")})["catch"](function(err){$scope.errors.other=err.message})},$scope.loginOauth=function(provider){$window.location.href="/auth/"+provider}}]),angular.module("theBossApp").controller("SettingsCtrl",["$scope","timeOff","Auth","ModalService","toaster",function($scope,timeOff,Auth,ModalService,toaster){$scope.errors={},$scope.changePassword=function(form){$scope.submitted=!0,form.$valid&&Auth.changePassword($scope.user.oldPassword,$scope.user.newPassword).then(function(){$scope.message="Password successfully changed."})["catch"](function(){form.password.$setValidity("mongoose",!1),$scope.errors.other="Incorrect password",$scope.message=""})},$scope.currentUser=Auth.getCurrentUser(),timeOff.query(function(timeoffs){$scope.timeoffs=timeoffs}),$scope["delete"]=function(index,timeoff){ModalService.confirm.question("Delete "+timeoff.detail+"?",function(confirmed){confirmed?timeoff.$delete(function(){$scope.timeoffs.splice(index,1)}):$scope.order.date_required=null})()},$scope.approveToggle=function(index,timeoff){timeoff&&timeoff.$save(function(){toaster.pop("success","Success","Time off was "+(timeoff.approved?"approved":"declined"))})},$scope.addNewRequest=function(form){$scope.submitted=!0,form.$valid&&($scope.timeoff=new timeOff($scope.timeoff),$scope.timeoff.createdBy={},$scope.timeoff.createdBy.user_id=$scope.currentUser._id,$scope.timeoff.createdBy.name=$scope.currentUser.name,$scope.timeoff.createdBy.email=$scope.currentUser.email,$scope.timeoff.$save(function(data){$scope.timeoffs.push(data),$scope.timeoff={}}))}}]),angular.module("theBossApp").controller("SignupCtrl",["$scope","Auth","$location","$window",function($scope,Auth,$location,$window){$scope.user={},$scope.errors={},$scope.groups=["Group1","Group2"],$scope.register=function(form){if($scope.submitted=!0,form.$valid){var user={owner:"DelPriore",name:$scope.user.name,email:$scope.user.email,role:$scope.user.role,password:$scope.user.password,group:$scope.user.group};Auth.createUser(user).then(function(){$location.path("/user")})["catch"](function(err){err=err.data,$scope.errors={},angular.forEach(err.errors,function(error,field){form[field].$setValidity("mongoose",!1),$scope.errors[field]=error.message})})}},$scope.loginOauth=function(provider){$window.location.href="/auth/"+provider}}]),angular.module("theBossApp").controller("UserCtrl",["$scope","User","Auth","$stateParams","roles","ModalService","toaster","userGroup",function($scope,User,Auth,$stateParams,roles,ModalService,toaster,userGroup){$scope.$parent.pageHeader="Users",$scope.users=[],$scope.allRoles=roles.allRoles(),$scope.groups=[],$scope.user_fields=[{title:"Name",type:"text",require:!0},{title:"Email",type:"email",require:!0},{title:"Password",type:"password",require:!0},{title:"Role",type:"select",show_options:$scope.allRoles,require:!0}],$scope.group_fields=[{title:"Name",type:"text",require:!0}],$scope.password_fields=[{title:"New Password",type:"text",require:!0}];var query={};$stateParams.role&&(query.role=$stateParams.role),$stateParams.group&&(query.group=$stateParams.group),$scope.loadUsers=function(){$scope.queryText&&(query.text=$scope.queryText),User.query(query).$promise.then(function(users){$scope.users=users},function(err){console.log(err)})},$scope.loadGroups=function(){$scope.groups=[],userGroup.query().$promise.then(function(groups){groups.forEach(function(group){$scope.groups.push(group.name)})},function(err){console.log(err)})},$scope.loadUsers(),$scope.loadGroups(),$scope.changRole=function(user,role){user.role=role,user.$updateRole()},$scope["delete"]=function(user,index){confirm("Are you sure you want to delete user "+user.name+"?")&&user.$delete(function(){$scope.users.splice(index,1)})},$scope.status={isopen:!1},$scope.toggleDropdown=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.status.isopen=!$scope.status.isopen},$scope.selectGroup=function(user,group){-1===user.groups.indexOf(group)?user.groups.push(group):user.groups.splice(user.groups.indexOf(group),1),user.$updateGroups()},$scope.addNewUser=function(){ModalService.show.modalFormDialog("Add new User",$scope.user_fields,function(model){if(model&&model.name&&model.email&&model.password&&model.role){var user=new User(model);return user.owner=Auth.getCurrentUser().owner,user.$save(function(){toaster.pop("success","User was saved with success"),$scope.loadUsers()},function(err){toaster.pop("error","There was an error saving user on server, "+err.data.message)}),model=null,!0}})()},$scope.addNewGroup=function(){ModalService.show.modalFormDialog("Add new Group/Department",$scope.group_fields,function(model){if(model&&model.name){var group=new userGroup(model);return group.$save(function(){toaster.pop("success","Group was saved with success"),$scope.loadGroups()},function(err){toaster.pop("error","There was an error saving group on server, "+err.data.message)}),model=null,!0}})()},$scope.resetPassword=function(user){user&&ModalService.show.modalFormDialog("Reset "+user.name+" password",$scope.password_fields,function(model){return model&&model.new_password?(user.newPassword=model.new_password,user.$resetPassword(function(){toaster.pop("success","User was saved with success"),$scope.loadUsers()},function(err){toaster.pop("error","There was an error saving user on server, "+err.data.message)}),model=null,!0):void 0})()}}]),angular.module("theBossApp").controller("AdminCtrl",["$scope","$http","Auth","User",function($scope,$http,Auth,User){$scope.users=User.query(),$scope["delete"]=function(user){User.remove({id:user._id}),angular.forEach($scope.users,function(u,i){u===user&&$scope.users.splice(i,1)})}}]),angular.module("theBossApp").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminCtrl",authenticate:!0})}]),angular.module("theBossApp").controller("CalendarCtrl",["$scope","OrderService","toaster","ModalService","moment","theBossSettings","roles","$location","$stateParams","Auth","$compile","$timeout","timeOff","uiCalendarConfig","calendar",function($scope,OrderService,toaster,ModalService,moment,theBossSettings,roles,$location,$stateParams,Auth,$compile,$timeout,timeOff,uiCalendarConfig,calendar){function updateCalendarEvent(event){var calendar={orderId:event.order_id,property:event.update_date,date:moment(event.start).zone(theBossSettings.timeZone).format()};OrderService.setdate_required(calendar)}$scope.$parent.pageHeader="Calendar",$scope.queryText="",$scope.uiCalendarConfig=uiCalendarConfig;var orderModal={};$scope.loadOrders=function(){$scope.uiCalendarConfig.calendars.myCalendar.fullCalendar("refetchEvents")},$scope.getLabelColor=function(status){return status?"approved"===status.toLowerCase()?"#777":"finished"===status.toLowerCase()?"#5cb85c":"in progress"===status.toLowerCase()?"#337ab7":"installation"===status.toLowerCase()?"#000000":"shipped"===status.toLowerCase()?"#B4AA5B":"blocked"===status.toLowerCase()||"service"===status.toLowerCase()?"#d9534f":"#f0ad4e":"label label-warning"},$scope.LoadOrders=function(start,end,something,callback){var query={};$scope.queryText&&(query.text=$scope.queryText);var allEvents=[];return"service"===$stateParams.section?void callback(allEvents):(query.status=$stateParams.status,query.from=moment(start).zone(theBossSettings.timeZone).format("YYYY-MM-DD"),query.to=moment(end).zone(theBossSettings.timeZone).format("YYYY-MM-DD"),void OrderService.getOrders(query).$promise.then(function(orders){angular.forEach(orders,function(order){try{order.shipped_date||this.push($scope.createEvent("date_required",order,order._id,(order.installation_date&&order.installation_date!==order.date_required?"(Chg)":"")+"["+order.po_number+"] "+order.customer.name+" "+(order.doorsSelection||""),order.date_required,order.installation_date&&order.installation_date!==order.date_required?$scope.getLabelColor("installation"):$scope.getLabelColor(order.status),"Forms")),!order.shipped_date&&order.installation_date&&order.installation_date!==order.date_required&&this.push($scope.createEvent("installation_date",order,order._id,"["+order.po_number+"] "+order.customer.name+" "+(order.doorsSelection||""),order.installation_date,$scope.getLabelColor(order.status),"Forms")),order.shipped_date&&this.push($scope.createEvent("shipped_date",order,order._id,"["+order.po_number+"] "+order.customer.name+" "+(order.doorsSelection||""),order.shipped_date,$scope.getLabelColor("shipped"),"Forms"))}catch(ex){console.log("error loading this order",order,ex)}},allEvents),callback(allEvents)},function(err){toaster.pop("error","Error","Error loading orders "+err),console.log(err)}))},$scope.LoadOtherGroupOrders=function(start,end,something,callback){var query={};$scope.queryText&&(query.text=$scope.queryText);var allEvents=[];return"service"!==$stateParams.section&&Auth.getCurrentUser().groups&&0!==Auth.getCurrentUser().groups.length?(query.status=$stateParams.status,query.from=moment(start).zone(theBossSettings.timeZone).format("YYYY-MM-DD"),query.to=moment(end).zone(theBossSettings.timeZone).format("YYYY-MM-DD"),void OrderService.getOtherGroupOrders(query).$promise.then(function(orders){angular.forEach(orders,function(order){var eventDate=new Date(order._id.year,order._id.month-1,order._id.day);this.push($scope.createEventReserved(order.totalProjects+" Job(s)",eventDate,eventDate))},allEvents),callback(allEvents)},function(err){toaster.pop("error","Error","Error loading orders "+err),console.log(err)})):void callback(allEvents)},$scope.LoadOtherGroupServices=function(start,end,something,callback){var query={};$scope.queryText&&(query.text=$scope.queryText);var allEvents=[];return"service"!==$stateParams.section&&Auth.getCurrentUser().groups&&0!==Auth.getCurrentUser().groups.length?(query.status=$stateParams.status,query.from=moment(start).zone(theBossSettings.timeZone).format("YYYY-MM-DD"),query.to=moment(end).zone(theBossSettings.timeZone).format("YYYY-MM-DD"),void OrderService.getOtherGroupServices(query).$promise.then(function(orders){angular.forEach(orders,function(order){var eventDate=new Date(order._id.year,order._id.month-1,order._id.day);this.push($scope.createEventReserved(order.totalServices+" Service(s)",eventDate,eventDate))},allEvents),callback(allEvents)},function(err){toaster.pop("error","Error","Error loading orders "+err),console.log(err)})):void callback(allEvents)},$scope.LoadServices=function(start,end,something,callback){var query={};$scope.queryText&&(query.text=$scope.queryText);var allEvents=[];return"jobs"===$stateParams.section?void callback(allEvents):(query.approved=$stateParams.approved,query.completed=$stateParams.completed,query.from=moment(start).zone(theBossSettings.timeZone).format("YYYY-MM-DD"),query.to=moment(end).zone(theBossSettings.timeZone).format("YYYY-MM-DD"),void OrderService.getOrderServices(query).$promise.then(function(orders){angular.forEach(orders,function(order){order.services&&order.services.length>0&&angular.forEach(order.services,function(service,i){var label=service.completed?"[completed]":service.approved?"[approved]":"[new]";allEvents.push($scope.createEvent("services."+i+".date",service,order._id,"Service "+label+"-["+order.po_number+"] "+order.customer.name,service.date,$scope.getLabelColor(service.completed?"shipped":"service"),"Services"))})},allEvents),callback(allEvents)}))},$scope.LoadTimeOffs=function(start,end,something,callback){var query={dateFrom:start,dateTo:end,approved:!0};$scope.queryText&&(query.text=$scope.queryText);var allEvents=[];timeOff.getTimeOff(query).$promise.then(function(timeoffs){angular.forEach(timeoffs,function(timeoff){var timeoffDetail="Statutory holiday"===timeoff.type?timeoff.detail:timeoff.createdBy.name+" - "+timeoff.type;allEvents.push($scope.createEventOff(timeoffDetail,timeoff.from,timeoff.to))}),callback(allEvents)})},$scope.createEventOff=function(title,start,end){var calendarOrder={title:title,start:start,end:end,color:"#CABDBF",allDay:!0,editable:!1};return calendarOrder},$scope.createEventReserved=function(title,start,end){var calendarOrder={title:title,start:start,end:end,color:"#FF80AB",allDay:!0,editable:!1};return calendarOrder},$scope.createEvent=function(updateDate,item,orderId,title,start,labelColor,className){var calendarOrder={};return calendarOrder.order_id=orderId,calendarOrder.title=title,calendarOrder.start=start,calendarOrder.end=start,calendarOrder.color=labelColor,calendarOrder.className=className,calendarOrder.update_date=updateDate,calendarOrder.item=item,calendarOrder.allDay=!0,calendarOrder.editable=!0,calendarOrder};var isAdminRole=roles.validateRoleAdmin(Auth.getCurrentUser());$scope.eventDrop=function(event,delta,revertFunc){revertFunc()},$scope.eventClick=function(event){event.editable&&OrderService.get({orderId:event.order_id}).$promise.then(function(result){orderModal=ModalService.show.showOrderDetailsPopup("Event details",result,event.className)()},function(err){ModalService.showPopup("Error loading event details",err)})},$scope.$on("order.service.print",function(e,order,serviceIndex){$location.path("/order/detail/"+order+"/print/"+serviceIndex),orderModal.close()}),$scope.eventResize=function(event){updateCalendarEvent(event)},$scope.eventRender=function(event,element){$timeout(function(){$(element).attr("title",event.title)})},$scope.uiConfig={calendar:{header:{left:"today prev,next",center:"title",right:"month,basicWeek"},editable:isAdminRole,eventClick:$scope.eventClick,eventDrop:$scope.eventDrop,eventResize:$scope.eventResize,eventRender:$scope.eventRender}},$scope.yearView=function(){var currentView=$scope.myCalendar.fullCalendar("getView");ModalService.showPopup("Event details "+currentView.title,"")},$scope.eventSources=[$scope.LoadOrders,$scope.LoadServices,$scope.LoadTimeOffs,$scope.LoadOtherGroupOrders,$scope.LoadOtherGroupServices],$stateParams.status&&($scope.orderStatus=$stateParams.status)}]),angular.module("theBossApp").config(["$stateProvider",function($stateProvider){$stateProvider.state("calendar",{url:"/calendar",templateUrl:"app/calendar/calendar.html",controller:"CalendarCtrl",authenticate:!0}).state("calendar.section",{url:"/:section",templateUrl:"app/calendar/calendar-status.html",controller:"CalendarCtrl",authenticate:!0}).state("calendar.status",{url:"/:section/:status",templateUrl:"app/calendar/calendar-status.html",controller:"CalendarCtrl",authenticate:!0}).state("calendar.service",{url:"/:section/:approved/:completed",templateUrl:"app/calendar/calendar-services.html",controller:"CalendarCtrl",authenticate:!0})}]),angular.module("theBossApp").controller("FormCtrl",["$scope",function($scope){$scope.message="Hello"}]),angular.module("theBossApp").config(["$stateProvider",function($stateProvider){$stateProvider.state("form",{url:"/form",templateUrl:"app/form/form.html",controller:"FormCtrl",authenticate:!0})}]),angular.module("theBossApp").controller("MainCtrl",function(){}),angular.module("theBossApp").config(["$stateProvider",function($stateProvider){$stateProvider.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl",authenticate:!0})}]),angular.module("theBossApp").controller("OrderDetailCtrl",["$scope","$location","OrderService","ModalService","toaster","roles","uibDatepickerConfig","$timeout","order","timeOff","$filter","theBossSettings","_","calendar",function($scope,$location,OrderService,ModalService,toaster,roles,uibDatepickerConfig,$timeout,order,timeOff,$filter,theBossSettings,_,calendar){$scope.actives={},$scope.getOrderName=function(){var name="New Order";return $scope.order&&$scope.order._id&&(name="["+($scope.order.po_number?$scope.order.po_number:"##")+"] "+($scope.order.customer?$scope.order.customer.name:"???")),name},$scope.order=order,$scope.orderOriginal={},$scope.preview=!1,$scope.$parent.pageHeader=$scope.getOrderName();var timeout=null;$scope.order&&$scope.order._id&&($scope.preview=!0),$scope.isActiveTab=function(tab){return $scope.selectedTab===tab},$scope.selectTab=function(tab){$scope.selectedTab=tab},$scope.isNewOrder=function(){return!$scope.order._id},$scope.edit=function(){$scope.preview=!1},$scope.redirectToList=function(){$location.path("/orders")},$scope.validateForm=function(form){var validateForm={valid:!0,message:""};if(form.forms&&form.forms.length<=1&&form.forms.some(function(form){return form.required}))return{valid:!1,message:"No forms have been entered"};if(form.forms&&form.forms.length>1&&!form.forms.some(function(form){return!form.required}))return{valid:!1,message:"No forms have been entered"};var numericRequiredFields=[];if(form.forms&&form.forms.some(function(form){return form.fields.some(function(field){return field.require&&!field.value&&!field.hide||field.require&&0==field.value&&!field.hide?(numericRequiredFields.push(field.title),!0):!1})})){var message=numericRequiredFields.join(", ");return{valid:!1,message:"These field(s) "+message+" are required!"}}var formsHaveInvalidFields=form.forms&&form.forms.some(function(form){return form.fields.some(function(field){return field.require&&!field.value&&!field.hide})}),areAllFormsValid=form.customer&&form.customer.name&&form.customer.ship_to&&form.customer.phone&&form.po_number&&form.date_required&&!formsHaveInvalidFields;return areAllFormsValid?validateForm:{valid:!1,message:"Check that all required fields are entered."}},$scope.saveOrder=function(){$scope.order.$save(function(savedOrder){$scope.order._id?$scope.redirectToList():$scope.order=savedOrder,toaster.pop("success","Success","Saved you order "+$scope.getOrderName())},function(err){$scope.errors=err.errors,toaster.pop("error","Error saving you order","Check that all required field are entered.")})},$scope.reset=function(){$scope.isNewOrder()&&($scope.order=new OrderService({}))},$scope.save=function(form){var validateForm=$scope.validateForm($scope.order);validateForm.valid?!roles.validateRoleAdmin()&&!$scope.order.ordered_accessories||$scope.order.ordered_accessories&&0===$scope.order.ordered_accessories.length?ModalService.confirm.question("Do you want to add accesories to this order?",function(confirmed){return confirmed?void($scope.actives.two=!0):void $scope.saveOrder()})():$scope.saveOrder():toaster.pop("error","Error saving you order",validateForm.message)},$scope["delete"]=function(){ModalService.confirm["delete"](function(){$scope.order.$delete(function(){$scope.redirectToList(),toaster.pop("success","Success","Deleted you order "+$scope.getOrderName())},function(err){toaster.pop("error","Error","Error deleting order "+err)})})($scope.getOrderName()+" order")},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.disabled=function(date,mode){return"day"===mode&&(0===date.getDay()||6===date.getDay())},$scope.minDate=$scope.order?$scope.order.date_required:null,uibDatepickerConfig.minDate=$scope.minDate,$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.updateOrderOnChange=function(newValue,oldValue,message){newValue!==oldValue&&(timeout?($timeout.cancel(timeout),timeout=null):timeout=$timeout(function(){$scope.order.$save(function(order){$scope.order=order,toaster.pop("success","Success",message)},function(err){$scope.errors=err.errors,toaster.pop("error","Error","Error saving you order "+err)})},1e3))},$scope.$watch("order.installation_date",function(newValue,oldValue){$scope.updateOrderOnChange(newValue,oldValue,"Saved installation date")},!0),$scope.$watch("order.date_required",function(newValue,oldValue){newValue&&!order._id&&calendar.numberOfScheduledOrders(moment(newValue).zone(theBossSettings.timeZone).format(),function(countOrdersOnThisDay){countOrdersOnThisDay>=2&&ModalService.confirm.question("This date already has "+countOrdersOnThisDay+" jobs on it. Would you like to continue anyways?",function(confirmed){return confirmed?void 0:void(order.date_required=null)})()})},!0),$scope.$on(theBossSettings.userAutoCompleteSelectedEvent,function(event,userSelected){var message="Successfully saved "+userSelected.fieldName+" to "+userSelected.value;$scope.updateOrderOnChange(1,0,message)},!0),$scope.$watch("order.date_required",function(newValue,oldValue){newValue!==oldValue&&newValue&&!$scope.order._id&&timeOff.check({date:newValue}).$promise.then(function(data){if(data.length>0){var timeOffMessage="There are time offs for this period:<br>";angular.forEach(data,function(item){var fromDate=$filter("date")(item.from),toDate=$filter("date")(item.to);timeOffMessage+=("Statutory holiday"===item.type?item.detail:item.createdBy.name)+" - "+item.type+" - "+fromDate+" - "+toDate+"<br>"}),timeOffMessage+="<strong>Continue?</strong>",ModalService.confirm.question(timeOffMessage,function(confirmed){confirmed||($scope.order.date_required=null)})()}},function(err){toaster.pop("error","Error","Error loading time off "+err)})},!0)}]),angular.module("theBossApp").controller("OrderListCtrl",["$scope","OrderService","$stateParams",function($scope,OrderService,$stateParams){$scope.$parent.pageHeader="Orders",$scope.orders=[],$scope.totalOrders=0,$scope.currentPage=1,$scope.maxSize=10,$stateParams.status&&($scope.orderStatus=$stateParams.status),$scope.loadOrders=function(){var query={};$scope.orderStatus&&(query.status=$scope.orderStatus),$scope.queryText&&(query.text=$scope.queryText),query.limit=$scope.maxSize=10,query.page=$scope.currentPage,OrderService.query(query).$promise.then(function(orders){$scope.orders=orders.orders,$scope.currentPage=orders.page,$scope.totalOrders=orders.totalOrders})},$scope.loadOrders(),$scope.$watch("currentPage",function(page1,page2){page1!=page2&&$scope.loadOrders()})}]),angular.module("theBossApp").controller("OrderPrintCtrl",["$scope","order","$stateParams","$window","$filter","toaster","Auth","ModalService",function($scope,order,$stateParams,$window,$filter,toaster,Auth,ModalService){var service=order.services[$stateParams.action];if($scope.action=service?service.title:"Installation",$scope.date=service?service.date:order.installation_date,$scope.done_by=service?service.done_by:order.installation_by,$scope.details=service?service.details:"",$scope.order=order,$scope.getFormDate=function(){return $filter("date")($scope.date)},"worker"===Auth.getCurrentUser().role)var fields=[{title:"Done By",type:"user",require:!0,value:$scope.done_by,show_options:"worker"}];else var fields=[{title:"Date",type:"date",require:!0,value:$scope.date},{title:"Done By",type:"user",require:!0,value:$scope.done_by,show_options:"worker"}];$scope.print=function(){ModalService.show.modalFormDialog("Confirm service date",fields,function(model){return model?order?(order.$save||(order=new OrderService(order)),service?(order.services[$stateParams.action].date=model.date,order.services[$stateParams.action].done_by=model.done_by):(order.installation_date=model.date,order.installation_by=model.done_by),$scope.date=model.date,$scope.done_by=model.done_by,order.$save(function(savedResponse){toaster.pop("success","Service form sent to printer with success"),$window.print(),$window.history.back()},function(err){toaster.pop("error","There was an error saving service on server, "+err.message)}),!0):!1:void 0})()}}]),angular.module("theBossApp").controller("OrderServicesCtrl",["$scope","OrderService","$stateParams",function($scope,OrderService,$stateParams){$scope.getOrderName=function(order){var name="";return order&&order._id&&(name="["+(order.po_number?order.po_number:"##")+"] "+(order.customer?order.customer.name:"???")),name},$stateParams.status?$scope.serviceStatus=$stateParams.status:$scope.serviceStatus=null,$scope.loadOrders=function(){var query={};$scope.serviceStatus&&(query.status=$scope.serviceStatus),$scope.queryText&&(query.text=$scope.queryText),query.limit=$scope.maxSize=10,query.page=$scope.currentPage,OrderService.services(query).$promise.then(function(orders){$scope.orders=orders.orders,$scope.currentPage=orders.page,$scope.totalOrders=orders.totalOrders})},$scope.loadOrders(),$scope.$watch("currentPage",function(page1,page2){page1!=page2&&$scope.loadOrders()})}]),angular.module("theBossApp").controller("OrderCtrl",function(){}),angular.module("theBossApp").config(["$stateProvider",function($stateProvider){$stateProvider.state("order",{url:"/order",templateUrl:"app/order/order.html",authenticate:!0}).state("order.list",{url:"/list",templateUrl:"app/order/order-list/order-list.html",controller:"OrderListCtrl",authenticate:!0}).state("order.status",{url:"/list/:status",templateUrl:"app/order/order-list/order-list.html",controller:"OrderListCtrl",authenticate:!0}).state("order.services",{url:"/services",templateUrl:"app/order/order-services/order-services.html",controller:"OrderServicesCtrl",authenticate:!0}).state("order.services-status",{url:"/services/:status",templateUrl:"app/order/order-services/order-services.html",controller:"OrderServicesCtrl",authenticate:!0}).state("order.new",{url:"/detail",templateUrl:"app/order/order-detail/order-detail.html",resolve:{OrderService:"OrderService",order:["OrderService","$stateParams",function(OrderService,$stateParams){return $stateParams.id?new OrderService:new OrderService({})}]},controller:"OrderDetailCtrl",authenticate:!0}).state("order.detail",{url:"/detail/:id/:tab",templateUrl:"app/order/order-detail/order-detail.html",resolve:{OrderService:"OrderService",order:["OrderService","$stateParams",function(OrderService,$stateParams){return $stateParams.id?OrderService.get({orderId:$stateParams.id}).$promise.then(function(order){return order}):new OrderService({})}]},controller:"OrderDetailCtrl",authenticate:!0}).state("order.print",{url:"/detail/:id/print/:action",templateUrl:"app/order/order-print/order-print.html",resolve:{OrderService:"OrderService",order:["OrderService","$stateParams",function(OrderService,$stateParams){return $stateParams.id?OrderService.get({orderId:$stateParams.id}).$promise.then(function(order){return order}):new OrderService({})}]},controller:"OrderPrintCtrl",authenticate:!0})}]),angular.module("theBossApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function($location,$rootScope,$http,User,$cookieStore,$q){var currentUser={};return $cookieStore.get("token")&&(currentUser=User.get()),{login:function(user,callback){var cb=callback||angular.noop,deferred=$q.defer();return $http.post("/auth/local",{email:user.email,password:user.password}).success(function(data){$cookieStore.put("token",data.token),$cookieStore.put("owner",data.owner),User.get(function(user){return currentUser=user,deferred.resolve(data),cb()})}).error(function(err){return this.logout(),deferred.reject(err),cb(err)}.bind(this)),deferred.promise},logout:function(){$cookieStore.remove("token"),currentUser={}},createUser:function(user,callback){var cb=callback||angular.noop;return User.save(user,function(data){return cb(user)},function(err){return this.logout(),cb(err)}.bind(this)).$promise},changePassword:function(oldPassword,newPassword,callback){var cb=callback||angular.noop;return User.changePassword({id:currentUser._id},{oldPassword:oldPassword,newPassword:newPassword},function(user){return cb(user)},function(err){return cb(err)}).$promise},getCurrentUser:function(){return currentUser},isLoggedIn:function(){return currentUser.hasOwnProperty("role")},isLoggedInAsync:function(cb){currentUser.hasOwnProperty("$promise")?currentUser.$promise.then(function(){cb(!0)})["catch"](function(){cb(!1)}):cb(currentUser.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===currentUser.role},getToken:function(){return $cookieStore.get("token")}}}]),angular.module("theBossApp").factory("User",["$resource",function($resource){return $resource("/api/users/:id/:controller",{id:"@_id"},{query:{method:"GET",isArray:!0},changePassword:{method:"PUT",params:{controller:"password"}},resetPassword:{method:"PUT",params:{controller:"resetPassword"}},get:{method:"GET",params:{id:"me"}},updateRole:{method:"POST",url:"/api/users/:id/role/:role",params:{id:"@_id",role:"@role"}},updateGroups:{method:"POST",url:"/api/users/:id/groups",params:{id:"@_id",groups:"@groups"}}})}]),angular.module("theBossApp").service("calendar",["OrderService",function(OrderService){return{numberOfScheduledOrders:function(date,callout){OrderService.query({date_required:date}).$promise.then(function(orders){callout(orders.totalOrders)})}}}]),angular.module("theBossApp").directive("accessories",["OrderService","toaster",function(OrderService,toaster){return{restrict:"E",templateUrl:"components/directives/accessories/accessories.html",scope:!1,link:function(scope){scope.orders=[],scope.totalOrders=0,scope.currentPage=1,scope.maxSize=10,scope.notreceived=function(actual,expected){return!actual.received&&actual.quantity},scope.loadAccessories=function(){var query={};query.limit=scope.maxSize=10,query.page=scope.currentPage,OrderService.accessories(query).$promise.then(function(data){scope.orders=data.orders,scope.totalOrders=data.totalOrders})},scope.saveUpdates=function(index,order,accessory){accessory.items_received?(accessory.received=accessory.items_received>=(accessory.quantity||1),accessory.date_received=new Date,order.$save||(order=new OrderService(order)),
order.$save(function(){accessory.received?(order.ordered_accessories.splice(index,1),toaster.pop("success","Success","Received all "+accessory.description)):toaster.pop("success","Success","Updated items received for "+accessory.description)})):toaster.pop("error","Error","Nothing was set as received.")},scope.loadAccessories(),scope.$watch("currentPage",function(pageNoNew,pageNoOld){pageNoNew!=pageNoOld&&scope.loadAccessories()})}}}]),angular.module("theBossApp").directive("activeUrl",["$location",function($location){return{restrict:"A",link:function(scope,element){if(element[0].href){var path=element[0].href.replace("#","");$location.path()===path?element.addClass("active"):element.removeClass("active")}}}}]),angular.module("theBossApp").directive("alerts",["Auth","roles","timeOff","$interval","ModalService","$cookieStore","OrderService","$uibModalStack",function(Auth,roles,timeOff,$interval,ModalService,$cookieStore,OrderService,$uibModalStack){function createNewAlert(type,icon,message,url){return{type:type,icon:icon,message:message,url:url}}return{templateUrl:"components/directives/alerts/alerts.html",restrict:"EA",replace:!0,link:function(scope,element,attrs){scope.checkForUpdates=function(){scope.alerts=[],roles.validateRoleAdmin(Auth.getCurrentUser())&&timeOff["new"]().$promise.then(function(res){res.total>0&&scope.alerts.push(createNewAlert("Time Off","icon-time","There are "+res.total+" to approve","/settings"))});var getIgnoreCookieKey=function(){return"ignore-services-"+Auth.getCurrentUser().email};roles.validateCurrentUserRoleIn("sales rep,admin")&&OrderService.newAndNotCompletedServicesOlderThanTwoWeeks().$promise.then(function(data){scope.alerts.push(createNewAlert("Services","fa-tasks","There are "+data.length+" orders that have services to be reviewed","/order/services"));var ignoredAlerts=$cookieStore.get(getIgnoreCookieKey());!ignoredAlerts&&data.length>0&&!$uibModalStack.getTop()&&ModalService.show.showPopup("Outstanding Services","<strong>You currently have "+data.length+" of order(s) with services that have been outstanding for more than 2 weeks. Please have these services completed in order to avoid this pop-up.</strong>",function(){$cookieStore.put(getIgnoreCookieKey(),data.length)})(),ignoredAlerts&&ignoredAlerts!==data.length&&$cookieStore.remove(getIgnoreCookieKey())})},Auth.isLoggedIn()&&(scope.checkForUpdates(),$interval(scope.checkForUpdates,1e5))}}}]),angular.module("theBossApp").directive("fieldUpload",["$upload","$timeout","$rootScope","theBossSettings","toaster",function($upload,$timeout,$rootScope,theBossSettings,toaster){return{templateUrl:"components/directives/field-upload/field-upload.html",restrict:"E",scope:{model:"="},link:function(scope,element,attrs){scope.preview=attrs.preview||scope.$parent.preview,$rootScope.$on(theBossSettings.previewModeEvent,function(event,preview){scope.preview=preview}),scope.encodeFileName=function(fileName){return encodeURIComponent(fileName)},scope.deleteFile=function(file,index,event){scope.model.uploaded_files.splice(index,1),scope.model.$save(function(){toaster.pop("success","Success","Delete file "+file.filename)})},attrs.uploadUrl?(scope.model=scope.model||{},scope.uploadRightAway=!0,scope.hasUploader=function(index){return null!==scope.upload[index]},scope.hasUploadingInProgress=function(){angular.forEach(scope.progress,function(percent){return 100>percent})},scope.abort=function(index){scope.upload[index].abort(),scope.upload[index]=null},scope.onFileSelect=function($files){if(scope.progress=[],scope.upload&&scope.upload.length>0)for(var i=0;i<scope.upload.length;i++)null!=scope.upload[i]&&scope.upload[i].abort();scope.upload=[],scope.selectedFiles=$files,scope.dataUrls=[];for(var i=0;i<$files.length;i++){var $file=$files[i];if(window.FileReader&&$file.type.indexOf("image")>-1){var fileReader=new FileReader;fileReader.readAsDataURL($files[i]);(function(fileReader,index){fileReader.onload=function(e){$timeout(function(){scope.dataUrls[index]=e.target.result})}})(fileReader,i)}scope.progress[i]=-1,scope.uploadRightAway&&scope.start(i)}},scope.start=function(index){scope.progress[index]=0,scope.errorMsg=null,scope.upload[index]=$upload.upload({url:attrs.uploadUrl,method:"POST",file:scope.selectedFiles[index]}).then(function(response){scope.model.uploaded_files.push(response.data),scope.model.$save(function(){scope.progress[index]=100,toaster.pop("success","Success","Uploaded file with success "+response.data.filename)})},function(response){response.status>0&&(scope.errorMsg=response.status+": "+response.data)},function(evt){scope.progress[index]=Math.min(100,parseInt(100*evt.loaded/evt.total))}).xhr(function(xhr){xhr.upload.addEventListener("abort",function(){console.log("abort complete")},!1)})},scope.resetInputFile=function(){for(var elems=document.getElementsByTagName("input"),i=0;i<elems.length;i++)"file"==elems[i].type&&(elems[i].value=null)}):element.text("You need to set upload-url attribute")}}}]),angular.module("theBossApp").directive("field",["$http","$compile","$timeout","User","_","uibDatepickerConfig","$rootScope","theBossSettings","$parse",function($http,$compile,$timeout,User,_,uibDatepickerConfig,$rootScope,theBossSettings,$parse){function getFieldTemplate(scope,element,attr){var fieldTemplate="";switch(scope.field.type){case"date":scope.today=function(){scope.field.value=new Date},scope.clear=function(){scope.field.value=null},scope.disabled=function(date,mode){return"day"===mode&&(0===date.getDay()||6===date.getDay())},scope.toggleMin=function(){scope.minDate=scope.minDate?null:new Date},_.some(scope.field.show_options,function(option){return option.showMinToday})&&(scope.minDate=new Date,uibDatepickerConfig.minDate=new Date);var minDate=_.some(scope.field.show_options,function(option){return option.minDate});minDate&&(scope.minDate=minDate,uibDatepickerConfig.minDate=minDate),scope.show_calendar=!1,scope.openCalendar=function($event){$event.preventDefault(),$event.stopPropagation(),scope.show_calendar=!0},scope.dateOptions={formatYear:"yy",startingDay:1},scope.initDate=new Date(scope.field.value),scope.model&&(scope.model=new Date(scope.model)),scope.format="dd-MMMM-yyyy",fieldTemplate='<div class="input-group"><input type="text" class="form-control" uib-datepicker-append-to-body="false" uib-datepicker-popup="{{ format }}" name="fieldName" placeholder="{{field.title}}"ng-model="model"  ng-required="{{ field.require }}" is-open="show_calendar" close-text="Close" min-date="minDate"/><span class="input-group-btn"><button type="button" class="btn btn-default" ng-click="openCalendar($event)"><i class="glyphicon glyphicon-calendar"></i></button></span></div>',fieldTemplate=formField(fieldTemplate);break;case"text":case"number":fieldTemplate='<input type="text" class="form-control" name="fieldName" placeholder="{{field.title}}"ng-model="model"  ng-required="{{ field.require }}"/>',fieldTemplate=formField(fieldTemplate);break;case"hidden":fieldTemplate='<input type="hidden" class="form-control" name="fieldName" ng-model="model" />',fieldTemplate=fieldTemplate;break;case"password":fieldTemplate='<input type="password" class="form-control" name="fieldName" placeholder="{{field.title}}"ng-model="model"  ng-required="{{ field.require }}"/>',fieldTemplate=formField(fieldTemplate);break;case"email":fieldTemplate='<div class="input-group"><span class="input-group-addon"><i class="fa fa-envelope-o fa-fw"></i></span><input type="email" class="form-control" name="fieldName" placeholder="{{field.title}}"ng-model="model" ng-required="{{ field.require }}"/></div>',fieldTemplate=formField(fieldTemplate);break;case"user":scope.field.show_options;scope.getUsers=function(text){var userQuery={name:text};return scope.field.show_options&&(userQuery.role=scope.field.show_options),User.query(userQuery).$promise.then(function(users){var usersToAdd=[];return angular.forEach(users,function(user){usersToAdd.push(user)}),usersToAdd})},scope.selectedUser=function(item,model,label){scope.model={user_id:item._id,name:item.name,email:item.email},$rootScope.$broadcast(theBossSettings.userAutoCompleteSelectedEvent,{fieldName:scope.field.title,value:item.name})},fieldTemplate=' <input type="text" ng-model="model" placeholder="lookup user" typeahead-on-select="selectedUser($item, $model, $label)" uib-typeahead="(user.name + \', \'+ user.email) for user in getUsers($viewValue)" uib-typeahead-loading="loadingLocations" class="form-control"><i ng-show="loadingLocations" class="glyphicon glyphicon-refresh"></i>',fieldTemplate=formField(fieldTemplate);break;case"select":fieldTemplate='<select name="fieldName" class="form-control" placeholder="{{field.title}}"ng-model="model"  ng-required="{{ field.require }}" ng-options="value for value in splitOptions(field.show_options)"ng-show="!editmode"><option value=""></option></select>',fieldTemplate=formField(fieldTemplate);break;case"checkbox":fieldTemplate='<div class="checkbox"><label><input type="checkbox" name="fieldName" ng-model="model" ng-required="{{ field.require }}"></label></div>',fieldTemplate=formField(fieldTemplate);break;case"radio":fieldTemplate='<div class="radio"> <div class="radio" ng-repeat="option in splitOptions(field.show_options)"><label><input type="radio" name="fieldName" ng-model="model" ng-value="option">{{ option }}</label></div></div>',fieldTemplate=formField(fieldTemplate);break;case"textarea":fieldTemplate='<textarea class="form-control" rows="3" name="fieldName" placeholder="{{field.title}}"ng-model="model"  ng-required="{{ field.require }}"/>',fieldTemplate=formField(fieldTemplate);break;case"tokens":fieldTemplate='<input type="text" class="form-control tokenfield" name="fieldName"ng-model="model" ng-required="{{ field.require }}"/>',fieldTemplate=formField(fieldTemplate);break;case"composite":fieldTemplate='<div class="well"><div  field ng-model="composite_field.value" ng-field="composite_field" ng-repeat="composite_field in field.show_options"></div></div>',fieldTemplate=formField(fieldTemplate)}return fieldTemplate}var formField=function(field){return'<div ng-form="form" class="form-group" ng-class="{\'has-error\' :  form.fieldName.$invalid  }" ng-hide="field.hide"><label class="control-label" ng-class="{\'col-sm-4\' : !isInine}">{{field.title}}</label><div class="col-sm-8" ng-class="{\'col-sm-6\' : !isInline}">'+field+'</div><div class="col-sm-2" ng-show="!isInline" restricted-access><div name="tools" ng-show="field._id" class="btn-group-xs pull-right" tooltip-placement="top" tooltip-append-to-body="true" tooltip="Edit or Delete {{field.title}}"><button type="button" class="btn btn-default fa fa-pencil" ng-click="edit(fieldForm,field,index)"></button><button type="button" class="btn btn-default fa fa-trash-o" ng-click="delete(fieldForm,field,index)"></button></div></div></div>'};return{restrict:"EA",scope:{model:"=ngModel",field:"=ngField",fieldForm:"=",edit:"&","delete":"&",index:"=",preview:"@"},link:function(scope,elem,attr,form){if(scope.splitOptions=function(optionString){return"[object Array]"===Object.prototype.toString.call(optionString)?optionString:optionString?optionString.split(","):[]},scope.field){scope.field.show_options="function"==typeof scope.field.show_options?scope.field.show_options():scope.field.show_options;var $field=$(getFieldTemplate(scope,elem,attr)).appendTo(elem);$compile($field)(scope),"tokens"===scope.field.type&&$timeout(function(){var tokenConfig={tokens:scope.field.value};scope.field.show_options&&(tokenConfig.autocomplete={source:scope.field.show_options,delay:100},tokenConfig.showAutocompleteOnFocus=!0),elem.find(".tokenfield").tokenfield(tokenConfig)},700),scope.field.focus===!0&&$timeout(function(){elem.find("input, select, textarea").focus()},700)}}}}]).directive("datepickerLocaldate",["$parse",function($parse){function link(scope,element,attr,ctrls){var ngModelController=ctrls[0];ngModelController.$parsers.push(function(viewValue){return viewValue.setMinutes(viewValue.getMinutes()-viewValue.getTimezoneOffset()),viewValue.toISOString().substring(0,10)}),ngModelController.$formatters.push(function(modelValue){if(!modelValue)return void 0;var dt=new Date(modelValue);return dt.setMinutes(dt.getMinutes()+dt.getTimezoneOffset()),dt})}var directive={restrict:"A",require:["ngModel"],link:link};return directive}]),angular.module("theBossApp").directive("fieldUpload",["$upload","$timeout","$rootScope","theBossSettings","toaster",function($upload,$timeout,$rootScope,theBossSettings,toaster){return{templateUrl:"components/directives/field-upload/field-upload.html",restrict:"E",scope:{model:"="},link:function(scope,element,attrs){scope.preview=attrs.preview||scope.$parent.preview,$rootScope.$on(theBossSettings.previewModeEvent,function(event,preview){scope.preview=preview}),scope.encodeFileName=function(fileName){return encodeURIComponent(fileName)},scope.deleteFile=function(file,index,event){scope.model.uploaded_files.splice(index,1),scope.model.$save(function(){toaster.pop("success","Success","Delete file "+file.filename)})},attrs.uploadUrl?(scope.model=scope.model||{},scope.uploadRightAway=!0,scope.hasUploader=function(index){return null!==scope.upload[index]},scope.hasUploadingInProgress=function(){angular.forEach(scope.progress,function(percent){return 100>percent})},scope.abort=function(index){scope.upload[index].abort(),scope.upload[index]=null},scope.onFileSelect=function($files){if(scope.progress=[],scope.upload&&scope.upload.length>0)for(var i=0;i<scope.upload.length;i++)null!==scope.upload[i]&&scope.upload[i].abort();scope.upload=[],scope.selectedFiles=$files,scope.dataUrls=[];for(var i=0;i<$files.length;i++){var $file=$files[i];if(window.FileReader&&$file.type.indexOf("image")>-1){var fileReader=new FileReader;fileReader.readAsDataURL($files[i]);(function(fileReader,index){fileReader.onload=function(e){$timeout(function(){scope.dataUrls[index]=e.target.result})}})(fileReader,i)}scope.progress[i]=-1,scope.uploadRightAway&&scope.start(i)}},scope.start=function(index){scope.progress[index]=0,scope.errorMsg=null,scope.upload[index]=$upload.upload({url:attrs.uploadUrl,method:"POST",file:scope.selectedFiles[index]}).then(function(response){scope.model.uploaded_files.push(response.data),scope.model.$save(function(){scope.progress[index]=100,toaster.pop("success","Success","Uploaded file with success "+response.data.filename)})},function(response){response.status>0&&(scope.errorMsg=response.status+": "+response.data)},function(evt){scope.progress[index]=Math.min(100,parseInt(100*evt.loaded/evt.total))}).xhr(function(xhr){xhr.upload.addEventListener("abort",function(){console.log("abort complete")},!1)})},scope.resetInputFile=function(){for(var elems=document.getElementsByTagName("input"),i=0;i<elems.length;i++)"file"===elems[i].type&&(elems[i].value=null)}):element.text("You need to set upload-url attribute")}}}]),angular.module("theBossApp").directive("fileUploads",["$upload","$timeout","$rootScope","theBossSettings","toaster","OrderService",function($upload,$timeout,$rootScope,theBossSettings,toaster,OrderService){return{templateUrl:"components/directives/file-uploads/file-uploads.html",restrict:"E",scope:{model:"="},link:function(scope,element,attrs){scope.preview=attrs.preview||scope.$parent.preview,$rootScope.$on(theBossSettings.previewModeEvent,function(event,preview){scope.preview=preview}),scope.encodeFileName=function(fileName){return encodeURIComponent(fileName)},scope.deleteFile=function(file,index,event){scope.model.uploaded_files.splice(index,1),scope.model.$save(function(){toaster.pop("success","Success","Delete file "+file.filename)})},attrs.uploadUrl?(scope.model=scope.model||{},scope.uploadRightAway=!0,scope.hasUploader=function(index){return null!=scope.upload[index]},scope.hasUploadingInProgress=function(){angular.forEach(scope.progress,function(percent){return 100>percent})},scope.abort=function(index){scope.upload[index].abort(),scope.upload[index]=null},scope.onFileSelect=function($files){if(scope.progress=[],scope.upload&&scope.upload.length>0)for(var i=0;i<scope.upload.length;i++)null!=scope.upload[i]&&scope.upload[i].abort();scope.upload=[],scope.selectedFiles=$files,scope.dataUrls=[];for(var i=0;i<$files.length;i++){var $file=$files[i];if(window.FileReader&&$file.type.indexOf("image")>-1){var fileReader=new FileReader;fileReader.readAsDataURL($files[i]);(function(fileReader,index){fileReader.onload=function(e){$timeout(function(){scope.dataUrls[index]=e.target.result})}})(fileReader,i)}scope.progress[i]=-1,scope.uploadRightAway&&scope.start(i)}},scope.start=function(index){scope.progress[index]=0,scope.errorMsg=null,scope.upload[index]=$upload.upload({url:attrs.uploadUrl,method:"POST",file:scope.selectedFiles[index]}).then(function(response){scope.model.uploaded_files.push(response.data),scope.model.$save(function(){scope.progress[index]=100,toaster.pop("success","Success","Uploaded file with success "+response.data.filename)})},function(response){response.status>0&&(scope.errorMsg=response.status+": "+response.data)},function(evt){scope.progress[index]=Math.min(100,parseInt(100*evt.loaded/evt.total))}).xhr(function(xhr){xhr.upload.addEventListener("abort",function(){console.log("abort complete")},!1)})},scope.resetInputFile=function(){for(var elems=document.getElementsByTagName("input"),i=0;i<elems.length;i++)"file"==elems[i].type&&(elems[i].value=null)}):element.text("You need to set upload-url attribute")}}}]),angular.module("theBossApp").directive("focusMe",["$timeout",function($timeout){return function(scope,element,attrs){scope.$watch(attrs.focusMe,function(value){value===!0&&$timeout(function(){element[0].focus()},700)})}}]),angular.module("theBossApp").directive("forms",["FormService","ModalService","toaster",function(FormService,ModalService,toaster){function ngModelPopulate(model,field){angular.forEach(model,function(property,key){field[key]=property})}var field_types=["text","number","email","password","radio","select","date","textarea","checkbox","hidden","composite"];return{templateUrl:"components/directives/form/form.html",restrict:"E",scope:{listOfForms:"=",module:"="},controller:["$scope",function($scope){function getFormSetupFields(form,field){return[{title:"Title",value:field.title,require:!0,type:"text"},{title:"Value",value:field.value,require:!1,type:"text"},{title:"Type",value:field.type,require:!0,type:"select",show_options:field_types},{title:"Show Options",value:field.show_options,require:!1,type:"tokens"},{title:"Require",value:field.require,require:!1,type:"checkbox"},{title:"Show when",value:field.show_when,require:!1,type:"text"}]}function StopEventPropagation(e){e&&(e.preventDefault(),e.stopPropagation())}$scope.addForm=function(form){$scope.listOfForms=$scope.listOfForms||[],$scope.listOfForms.push(angular.copy(form))},$scope.addField=function(form,e){StopEventPropagation(e),ModalService.show.modalFormDialog("Add new field ",getFormSetupFields(form,{}),function(model){return model&&model.title&&model.type?(FormService.addField({id:form._id},model,function(updated_form){toaster.pop("success","Field "+model.title+" was added with success"),ngModelPopulate(updated_form,form)},function(err){toaster.pop("error","There was an error saving new field on server, "+err)}),!0):(toaster.pop("error","Fill in the required fields, "+err),!1)})()},$scope.editField=function(form,field){var form_fields=[];angular.forEach(form.fields,function(field){this.push(field.title)},form_fields),ModalService.show.modalFormDialog("Edit field "+field.title,getFormSetupFields(form,field),function(model){return model?(ngModelPopulate(model,field),FormService.updateField({id:form._id,fieldId:field._id},field,function(updated_form){toaster.pop("success","Field "+field.title+" was updated with success"),ngModelPopulate(updated_form,form)},function(err){toaster.pop("error","There was an error saving field on server, "+err.message)}),!0):!1})()},$scope.addNewForm=function(e){StopEventPropagation(e);var forms_to_clone_from=[];angular.forEach($scope.moduleForms,function(form){this.push(form.formName)},forms_to_clone_from);var newFormFields=[{title:"Form Name",value:"",require:!0,type:"text"},{title:"Required",value:"",require:!1,type:"checkbox"}];forms_to_clone_from.length>0&&newFormFields.push({title:"Clone From",value:"",require:!1,type:"select",show_options:forms_to_clone_from}),ModalService.show.modalFormDialog("Add new form",newFormFields,function(model){var newForm={};return model.clone_from&&angular.forEach($scope.moduleForms,function(form){form.formName===model.clone_from&&(newForm=angular.copy(form),delete newForm._id)}),newForm.formName=model.form_name,newForm.required=model.required,newForm.module=$scope.module,new FormService(newForm).$save(function(form){form?(toaster.pop("success","New form was added with success"),$scope.listOfForms=$scope.listOfForms||[],$scope.moduleForms=$scope.moduleForms||[],$scope.listOfForms.push(form),$scope.moduleForms.push(form)):toaster.pop("error","There was an error saving new form on server.")},function(error){toaster.pop("error","There was an error saving new form on server. The form name already exists")}),!0})()},$scope.deleteForm=function(form,e,$index){StopEventPropagation(e),ModalService.confirm.question("Are you sure you want to permanently delete "+form.formName+"?",function(confirmed){if(confirmed){var formService=new FormService(form);formService.$delete(function(){toaster.pop("success","Form was deleted with success"),$scope.listOfForms.splice($index,1),$scope.moduleForms.splice($scope.moduleForms.indexOf(form),1)})}})()},$scope.deleteFormField=function(form,field,$index){ModalService.confirm.question("Are you sure you want to permanently delete "+field.title+"?",function(confirmed){if(confirmed){var formService=new FormService(form);formService.$deleteField({id:form._id,fieldId:field._id},function(updated_form){toaster.pop("success","Form field was deleted with success"),form.fields.splice($index,1)})}})()},$scope.removeForm=function(list,index,e){StopEventPropagation(e),ModalService.confirm.question("Remove "+list[index].formName+" from this form?",function(confirmed){confirmed&&list.splice(index,1)})()}}],link:function(scope,element,attrs){scope.oneAtATime=!0,scope.module=attrs.module,scope.errors=[],scope.moduleForms=[],scope.preview=attrs.preview||scope.$parent.preview,scope.module&&FormService.get({module:scope.module}).$promise.then(function(res){scope.moduleForms=res},function(err){scope.errors.push(err.message?err.message:err)}),scope.status={isopen:!1},scope.toggleDropdown=function($event){event.preventDefault(),event.stopPropagation(),scope.status.isopen=!scope.status.isopen}}}}]),angular.module("theBossApp").directive("newOrders",["OrderService",function(OrderService){return{templateUrl:"components/directives/new-orders/new-orders.html",restrict:"E",scope:!0,link:function(scope,element,attrs){scope.totalOrders=0,scope.orders=[];var query={};query.status="new",query.limit=null,query.page=null,query.sort="_createdAt",OrderService.query(query).$promise.then(function(data){scope.orders=data.orders,scope.totalOrders=data.totalOrders})}}}]),angular.module("theBossApp").directive("note",["Note","OrderService",function(Note,OrderService){return{templateUrl:"components/directives/note/note.html",restrict:"E",link:function(scope,element,attrs){scope.note={},scope.saveNote=function(isValid){if(isValid&&scope.note.order&&scope.note.content){var note=new Note(scope.note);note.$save(function(res){scope.note={},scope.loadNotes()})}},scope.loadOrders=function(val){return OrderService.query({text:val,limit:10}).$promise.then(function(res){var orders=[];return scope.note.order=null,angular.forEach(res.orders,function(item){orders.push(item)}),orders})},scope.selectedOrder=function(item,model,label){scope.note.order=item._id}}}}]),angular.module("theBossApp").directive("notes",["Note","OrderService",function(Note,OrderService){return{templateUrl:"components/directives/notes/notes.html",restrict:"E",scope:!0,link:function(scope,element,attrs){scope.notes=[],scope.loadNotes=function(){Note.New().$promise.then(function(notes){scope.notes=notes},function(err){console.log(err)})},scope.loadNotes()}}}]),angular.module("theBossApp").directive("orderAccessories",["$rootScope","theBossSettings","ModalService","toaster",function($rootScope,theBossSettings,ModalService,toaster){return{templateUrl:"components/directives/order/order-accessories/order-accessories.html",restrict:"E",scope:!0,link:function(scope,element,attrs){return scope.order?($rootScope.$on(theBossSettings.previewModeEvent,function(event,preview){scope.preview=preview}),scope.order_accessories_fields=[{title:"From Manufacturer",type:"text",require:!0,value:""},{title:"Description",type:"text",require:!0},{title:"Quantity",type:"number",require:!0,min:1}],void(scope.addNewAccessory=function(form){ModalService.show.modalFormDialog("Add new Accessory",scope.order_accessories_fields||[],function(model){return model&&model.description&&model.quantity&&model.quantity>0?(form&&(form.$save||(form=new OrderService(form)),form.ordered_accessories=form.ordered_accessories||[],form.ordered_accessories.unshift(model),form.$save(function(savedResponse){toaster.pop("success","Accessory was saved with success")},function(err){toaster.pop("error","There was an error saving service on server, "+err.message)})),model=null,!0):!1})()})):void element.text("Missing order on the scope")}}}]),angular.module("theBossApp").directive("orderDetails",["$rootScope","$parse","FormService","Auth","userGroup",function($rootScope,$parse,FormService,Auth,userGroup){return{templateUrl:"components/directives/order/order-details/order-details.html",restrict:"E",scope:{order:"="},link:function(scope){scope.order._id||FormService.get({module:"Order",required:!0}).$promise.then(function(res){scope.order.forms=res});var allUserGroups=[];userGroup.query().$promise.then(function(groups,error){allUserGroups=groups.map(function(elem){return elem.name}).join()}),scope.currentUser=Auth.getCurrentUser(),scope.groupList=function(){var groups=scope.currentUser.groups&&scope.currentUser.groups.length>0?scope.currentUser.groups.join():allUserGroups;return groups},scope.$watch("order.forms",function(newValue,oldValue){newValue&&oldValue&&newValue!==oldValue&&angular.forEach(newValue,function(form){angular.forEach(form.fields,function(formField){if(formField.show_when){var formula=formField.show_when,conditions=formula.split(/ \&\& | \|\| /);angular.forEach(conditions,function(condition){var fields=condition.split(/ \=\= | \!\=| /);angular.forEach(fields,function(field){var value;try{var getProperty=$parse(field);value=getProperty(form).replace(/^\s+|\s+$/g,""),value='"'+value+'"'}catch(ex){value=field}formula=formula.split(field).join(value)})});var evaluate=scope.$eval(formula);evaluate?formField.hide=!1:formField.hide=!0}})})},!0)}}}]),angular.module("theBossApp").directive("quickList",["$http","ModalService","FormService","toaster","$rootScope",function($http,ModalService,FormService,toaster,$rootScope){return{templateUrl:"components/directives/order/order-list/order-list.html",restrict:"E",transclude:!0,replace:!0,scope:{quickList:"=",itemSelect:"&",searchFilter:"=",listSearch:"&",listFieldsToEdit:"=",editableForm:"=",footerForm:"="},link:function(scope,elem,attrs){scope.listType=attrs.listType||"list",scope.title=attrs.title||"Quick list",scope.selectedFilter={text:""},scope.quickList=scope.quickList||[],scope.preview=attrs.preview||scope.$parent.preview,scope.selectedItem=null},controller:["$scope",function($scope){var pagesShown=1,pageSize=5;$scope.itemsLimit=function(){return pageSize*pagesShown},$scope.hasMoreItemsToShow=function(){return $scope.quickList&&pagesShown<$scope.quickList.length/pageSize},$scope.showMoreItems=function(){pagesShown+=1},$scope.lookup=function(text,api){return $scope.selectedFilter.itemId=null,api?$http.get(api,{params:{name:text}}).then(function(res){var results=[];return angular.forEach(res.data,function(item){results.push(item)}),results}):text},$scope.selectedResult=function(item){$scope.selectedFilter.itemId=item._id},$scope.addNewField=function(form){ModalService.show.modalFormDialog("Add new field",$scope.listFieldsToEdit,function(model){return model?(form&&form.$save&&($scope.quickList.unshift(model),form.$save(function(savedResponse){toaster.pop("success","Field was saved with success")},function(err){toaster.pop("error","There was an error saving field on server, "+err.message)})),model=null,!0):void 0})()},$scope.selectItem=function(item){$scope.selectedItem=item,$scope.itemSelect(item)}}]}}]),angular.module("theBossApp").directive("orderNotes",["Note","ModalService","toaster","Auth",function(Note,ModalService,toaster,Auth){return{templateUrl:"components/directives/order/order-notes/order-notes.html",restrict:"E",link:function(scope,element,attrs){return scope.notes=[],scope.order?(Note.OrderNotes({orderid:scope.order._id}).$promise.then(function(notes){scope.notes=notes}),scope.order_note_fields=[{title:"Content",type:"textarea",require:!0}],scope.resolved=function(note){note.$save({},function(msg){note.resolved=!0},function(err){console.log(err),note.resolved=!1})},scope.addNewNote=function(){ModalService.show.modalFormDialog("Add new Note",scope.order_note_fields,function(model){return model?(model=new Note(model),model.order=scope.order._id,model.$save(function(savedResponse){toaster.pop("success","Note was saved with success"),scope.notes.push(savedResponse)},function(err){toaster.pop("error","There was an error saving note on server, "+err.message)}),model=null,!0):void 0})()},void(scope.deleteNote=function($index,note){var question="Are you sure you want to delete this note?";ModalService.confirm.question(question,function(confirm){confirm&&note.$delete(function(){scope.notes.splice($index,1)})})()})):void element.text("Missing order on the scope")}}}]),angular.module("theBossApp").directive("orderOptions",function(){return{template:'<div class="dropdown hidden">          <button class="btn btn-default btn-xs dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown">           <span class="glyphicon glyphicon-cog"></span>            <span class="caret"></span>        </button>            <ul class="dropdown-menu dropdown-menu-right" role="menu" aria-labelledby="dropdownMenu1">            </ul>            </div> ',restrict:"E",replace:!0,scope:{order:"="},link:function(scope,element,attrs){element.parent().parent().bind("mouseenter",function(){element.removeClass("hidden")}),element.parent().parent().bind("mouseleave",function(){element.addClass("hidden")}),scope.order&&"new"===scope.order.status.toLowerCase()&&element.find("ul").append('<li role="presentation"><a role="menuitem" tabindex="-1" href="" ng-click="approveOrder({{ scope.order._id }})">Approve</a></li>')}}}),angular.module("theBossApp").directive("orderPreview",["$stateParams","$filter",function($stateParams,$filter){return{templateUrl:"components/directives/order/order-preview/order-preview.html",restrict:"E",scope:{order:"=",modal:"=",activeTab:"="},controller:["$scope",function($scope){$scope.preview=!0,$scope.tabs=[{title:"Forms",icon:"folder-open",template:"components/directives/order/order-preview/tab-forms.html",active:!0},{title:"Services",icon:"wrench",template:"components/directives/order/order-preview/tab-services.html",active:!1},{title:"Accessories",icon:"copy",template:"components/directives/order/order-preview/tab-accessories.html",active:!1},{title:"Files",icon:"file",template:"components/directives/order/order-preview/tab-files.html",active:!1},{title:"Notes",icon:"edit",template:"components/directives/order/order-preview/tab-notes.html",active:!1},{title:"Work Log",icon:"tasks",template:"components/directives/order/order-preview/tab-worklog.html",active:!1}],($stateParams.tab||$scope.activeTab)&&angular.forEach($scope.tabs,function(item){item.title===$stateParams.tab||item.title===$scope.activeTab?item.active=!0:item.active=!1;
})}]}}]),angular.module("theBossApp").directive("orderServices",["$rootScope","theBossSettings","ModalService","toaster","$templateCache","$compile","OrderService","$location",function($rootScope,theBossSettings,ModalService,toaster,$templateCache,$compile,OrderService,$location){return{templateUrl:"components/directives/order/order-services/order-services.html",restrict:"E",link:function(scope,element,attrs){return scope.order?(scope.order_service_fields=[{title:"Date",type:"date",require:!0},{title:"Details",type:"textarea",require:!0},{title:"Done By",type:"user",require:!1,show_options:"worker"}],scope.completed=function(order,service){var question="Are you sure you want to "+(service.approved&&!service.completed?"approve":"complete")+" this service?";ModalService.confirm.question(question,function(confirm){confirm?(order.$save||(order=new OrderService(order)),order.$save(function(orderSaved){scope.order=orderSaved})):(service.approved=service.approved&&!service.completed?!1:!0,service.completed=service.approved&&service.completed?!1:!1)})()},scope["delete"]=function(order,index){var question="Are you sure you want to delete this service?";ModalService.confirm.question(question,function(confirm){confirm&&(order.services.splice(index,1),order.$save||(order=new OrderService(order)),order.$save(function(orderSaved){scope.order=orderSaved}))})()},scope.addNewService=function(form){var serviceNr=form.services?form.services.length+1:1;ModalService.show.modalFormDialog("Add new Service #"+serviceNr,scope.order_service_fields,function(model){return model?(form&&(form.$save||(form=new OrderService(form)),model.title="Service #"+serviceNr,form.services.unshift(model),form.$save(function(savedResponse){toaster.pop("success","Service was saved with success")},function(err){toaster.pop("error","There was an error saving service on server, "+err.message)})),model=null,!0):void 0})()},scope.printService=function(orderId,serviceIndex){scope.modal?$rootScope.$broadcast("order.service.print",orderId,serviceIndex):$location.path("/order/detail/"+orderId+"/print/"+serviceIndex)},void(scope.print=function(){var popupWin=window.open("","_blank","width=300,height=300");popupWin.document.open(),popupWin.document.write('<html><head><link rel="stylesheet" type="text/css" href="style.css" /></head><body onload="window.print()"><div ng-include="components/directives/order/order-services/order-installation-form.html"></div></body></html>'),popupWin.document.close()})):void element.text("Missing order on the scope")}}}]),angular.module("theBossApp").directive("orderStatus",["$rootScope","theBossSettings",function($rootScope,theBossSettings){return{template:'<span class="label">{{status}} @ {{lastUpdatedOn | date}}</span>',restrict:"E",link:function(scope,element){$rootScope.$on(theBossSettings.orderChangedEvent,function(event,order){var status=order.status||"new";scope.setLabelClass(status)}),scope.setLabelClass=function(status){var span=element.find("span");status=status||"new",scope.status=status,status.toLowerCase()===theBossSettings.taskStatuses.Finished?span.attr("class","label label-success"):status.toLowerCase()===theBossSettings.taskStatuses.InProgress?span.attr("class","label label-primary"):status.toLowerCase()===theBossSettings.taskStatuses.Blocked?span.attr("class","label label-danger"):status.toLowerCase()===theBossSettings.taskStatuses.New?span.attr("class","label label-warning"):span.attr("class","label label-default")},scope.getLastTaskChangedDate=function(order){scope.lastUpdatedOn=order.last_updated_on},scope.order&&(scope.setLabelClass(scope.order.status),scope.getLastTaskChangedDate(scope.order)),scope.item&&(scope.setLabelClass(scope.item.status),scope.getLastTaskChangedDate(scope.item))}}}]),angular.module("theBossApp").directive("orderTasks",["$rootScope","theBossSettings",function($rootScope,theBossSettings){return{template:'<work-log order="order"></work-log>',restrict:"E",controller:["$scope",function($scope){$rootScope.$on(theBossSettings.previewModeEvent,function(event,preview){$scope.preview=preview}),$scope.order_task_fields=[{title:"Title",type:"text",require:!0},{title:"Duration",type:"text",require:!0},{title:"Status Options",type:"textarea",require:!0}]}],link:function(scope,element,attrs){scope.order||element.text("Missing order on the scope"),$rootScope.$on(theBossSettings.previewModeEvent,function(event,preview){scope.preview=preview})}}}]),angular.module("theBossApp").directive("orderWorkflow",["ModalService","$rootScope","toaster","theBossSettings","$location","Auth",function(ModalService,$rootScope,toaster,theBossSettings,$location,Auth){return{template:'<div class="btn-group btn-group-justified">        <div class="btn-group" ng-if="showWorkflowAction(\'approved\')">            <button type="button" class="btn btn-success" ng-click="setStatus(\'approved\')">Approve</button>        </div>        <div class="btn-group" ng-if="showWorkflowAction(\'blocked\')">            <button type="button" class="btn btn-warning" ng-click="setStatus(\'blocked\')">Blocked</button>        </div>        <div class="btn-group" ng-if="showWorkflowAction(\'finished\')">            <button type="button" class="btn btn-success" ng-click="setStatus(\'finished\')">Finished</button>            </div>  </div>  <div class="btn-group btn-group-justified" ng-if="showWorkflowAction(\'reset\')">        <div class="btn-group">            <button type="button" class="btn btn-danger" ng-click="setStatus(\'reset\')">Reset order status</button>       </div>  </div> ',restrict:"E",scope:{order:"="},link:function(scope,element,attrs){return scope.order?(scope.showWorkflowAction=function(action){switch(scope.order.status?scope.order.status.toLowerCase():""){case"approved":return"blocked"===action||"finished"===action;case"in progress":return"blocked"===action||"finished"===action||"reset"===action;case"blocked":return"approved"===action||"finished"===action||"reset"===action;case"finished":return"reset"===action;default:return"approved"===action}return!1},scope.setStatus=function(status){ModalService.confirm.question("You are about to "+status+" this order, are you sure?",function(confirmed){if(confirmed){var oldStatus=scope.order.status;"reset"===status?(scope.updateOrderTaskStatus(status),status="reset"===status?"approved":status,scope.order.status=status,scope.order.$save(function(order){scope.order=order,$rootScope.$broadcast(theBossSettings.orderChangedEvent,order)})):(scope.updateOrderTaskStatus(status),scope.order.status=status,scope.order.$save(function(order){scope.order=order,"new"===oldStatus&&$location.path("/"),$rootScope.$broadcast(theBossSettings.orderChangedEvent,order),toaster.pop("success","Success","Updated status to "+status)},function(err){toaster.pop("error","Error","Error updating status "+err)}))}})()},void(scope.updateOrderTaskStatus=function(status){for(var i=0;i<scope.order.forms.length;i++)for(var j=0;j<scope.order.forms[i].tasks.length;j++){var task=scope.order.forms[i].tasks[j];"reset"===status?(delete task.changed_by,delete task.changed_on,delete task.status):(task.changed_by=Auth.getCurrentUser()._id,task.changed_on=new Date,task.status="done"),scope.order.forms[i].tasks[j]=task}})):void element.text("orderWorkflow - Missing order on the scope")}}}]),angular.module("theBossApp").directive("restrictedAccess",["Auth","roles",function(Auth,roles){return{restrict:"A",link:function(scope,element,attrs){attrs.restrictedAccess?roles.validateCurrentUserRoleIn(attrs.restrictedAccess)||element.remove():roles&&!roles.validateRoleAdmin(Auth.getCurrentUser())&&element.remove()}}}]),angular.module("theBossApp").directive("roleAccess",["roles",function(roles){return{template:"<div></div>",restrict:"A",link:function(scope,element,attrs){}}}]),angular.module("theBossApp").directive("services",["OrderService",function(OrderService){return{templateUrl:"components/directives/services/services.html",restrict:"EA",scope:!0,link:function(scope,element,attrs){scope.totalOrders=0,scope.orders=[],OrderService.newAndNotCompletedServices().$promise.then(function(data){scope.orders=data,scope.totalOrders=data.length})}}}]),angular.module("theBossApp").directive("shippingList",["OrderService","$timeout","toaster",function(OrderService,$timeout,toaster){return{restrict:"E",templateUrl:"components/directives/shippingList/shippingList.html",scope:!0,controller:["$scope",function($scope){$scope.orders=[],$scope.totalOrders=0,$scope.currentPage=1,$scope.maxSize=10,$scope.shipped_date=null,$scope.loadOrders=function(){var query={};query.limit=$scope.maxSize=10,query.page=$scope.currentPage,OrderService.shippingList(query).$promise.then(function(data){$scope.orders=data.orders,$scope.currentPage=data.page,$scope.totalOrders=data.totalOrders})},$scope.order?$scope.orders=[$scope.order]:$scope.loadOrders(),$scope.$watch("currentPage",function(pageNoNew,pageNoOld){pageNoNew!==pageNoOld&&$scope.loadOrders()})}]}}]).directive("shippingListItem",["OrderService","$timeout","toaster","ModalService","moment","theBossSettings",function(OrderService,$timeout,toaster,ModalService,moment,theBossSettings){return{restrict:"E",templateUrl:"components/directives/shippingList/shippingListItem.html",scope:{item:"="},link:function($scope,element,attrs){$scope.opened=!1,$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0];var timeout=null;$scope.$watch("item.shipped_date",function(newValue,oldValue){newValue!==oldValue&&(timeout?($timeout.cancel(timeout),timeout=null):ModalService.confirm.question("Confirm shipping date of "+moment(newValue).zone(theBossSettings.timeZone).format("YYYY-MM-DD")+" set to order "+$scope.item.po_number,function(confirmed){confirmed&&(timeout=$timeout(function(){var order=new OrderService($scope.item);order.$save(function(savedOrder){$scope.item.shipped=!0,toaster.pop("success","Success","Shipped date was updated")},function(err){toaster.pop("error","Error","Error saving you order "+err)})},1e3))})())})}}}]),angular.module("theBossApp").directive("workLog",["OrderService","$location","Auth","$sce","$filter","$rootScope","theBossSettings",function(OrderService,$location,Auth,$sce,$filter,$rootScope,theBossSettings){return{templateUrl:"components/directives/work-log/work-log.html",restrict:"EA",scope:!0,link:function(scope){scope.totalOrders=0,scope.currentPage=1,scope.maxSize=10,scope.loadTasks=function(){var query={};query.limit=scope.maxSize=10,query.page=scope.currentPage,OrderService.tasks(query).$promise.then(function(data){scope.orders=data.orders,scope.currentPage=data.page,scope.totalOrders=data.totalOrders})},scope.order?scope.orders=[scope.order]:scope.loadTasks();scope.setTaskStatus=function(order,orderIndex,form,formIndex,task,status,e){return e&&(e.preventDefault(),e.stopPropagation()),form.tasks.forEach(function(formTask){task&&task._id!==formTask._id||(formTask.changed_by=Auth.getCurrentUser()._id,formTask.changed_on=new Date,formTask.status=status)}),order=new OrderService(order),order.$save(function(savedOrder){order=savedOrder,$rootScope.$broadcast(theBossSettings.orderChangedEvent,order),"finished"===savedOrder.status?scope.orders.splice(orderIndex,1):order.forms[formIndex].active=!0})},scope.deleteTaskStatus=function(order,orderIndex,form,formIndex,task,e){return e&&(e.preventDefault(),e.stopPropagation()),delete task.changed_by,delete task.changed_on,delete task.status,order=new OrderService(order),order.$save(function(savedOrder){order=savedOrder,$rootScope.$broadcast(theBossSettings.orderChangedEvent,order),order.forms[formIndex].active=!0})},scope.loadOrder=function(id){$location.path("/order/"+id)},scope.getOrderTitle=function(order){if(order&&order.customer){var dateRequired=$filter("date")(order.installation_date||order.date_required);return $sce.trustAsHtml(order.customer.name+" - "+order.po_number+" @ "+dateRequired)}return""},scope.$watch("currentPage",function(pageNoNew,pageNoOld){pageNoNew!==pageNoOld&&scope.loadTasks()})}}}]),angular.module("theBossApp").filter("encodeUrl",function(){return window.encodeURIComponent}),angular.module("theBossApp").filter("thebossDate",function(){return function(date){return date?(date=new Date(date),new Date(date.getUTCFullYear(),date.getUTCMonth(),date.getUTCDate(),date.getUTCHours(),date.getUTCMinutes(),date.getUTCSeconds()).toLocaleDateString()):""}}),angular.module("theBossApp").service("FormService",["$resource",function($resource){return $resource("/api/forms/:id",{id:"@_id"},{get:{method:"GET",isArray:!0,url:"/api/forms/:module/:required",params:{module:"@module",required:"@required"}},addField:{method:"PUT",url:"/api/forms/:id/fields",params:{id:"@id"}},deleteField:{method:"DELETE",url:"/api/forms/:id/field/:fieldId",params:{id:"@_id",fieldId:"@fieldId"}},updateField:{method:"PUT",url:"/api/forms/:id/fields/:fieldId",params:{id:"@_id",fieldId:"@fieldId"}},addOrUpdate:{method:"PUT",url:"/api/forms/:id/:target/:targetId",params:{id:"@id",targetId:"@targetId",target:"@target"}},addFieldOption:{method:"PUT",url:"/api/forms/:module/:field/:option",params:{module:"@module",field:"@field",option:"@option"}},"delete":{method:"DELETE",url:"/api/forms/:id",params:{id:"@_id"}}})}]),angular.module("theBossApp").factory("ModalService",["$rootScope","$uibModal",function($rootScope,$uibModal){function openModal(scope,modalClass){var modalScope=$rootScope.$new();return scope=scope||{},modalClass=modalClass||"modal-default",angular.extend(modalScope,scope),$uibModal.open({templateUrl:"components/modal/modal.html",controller:"ModalInstanceCtrl",resolve:{fields:function(){return scope.fields},callback:function(){return scope.callback}},windowClass:modalClass,scope:modalScope})}return{confirm:{"delete":function(del){return del=del||angular.noop,function(){var deleteModal,args=Array.prototype.slice.call(arguments),name=args.shift();deleteModal=openModal({modal:{dismissable:!0,title:"Confirm Delete",html:"<p>Are you sure you want to delete <strong>"+name+"</strong> ?</p>",buttons:[{classes:"btn-danger",text:"Delete",click:function(e){deleteModal.close(e)}},{classes:"btn-default",text:"Cancel",click:function(e){deleteModal.dismiss(e)}}]}},"modal-danger"),deleteModal.result.then(function(event){del.apply(event,args)})}},question:function(question,callback){return callback=callback||angular.noop,function(){var confirmationModal,confirmed=(Array.prototype.slice.call(arguments),!1);confirmationModal=openModal({modal:{dismissable:!0,title:"Confirm",html:"<p><strong>"+question+"</strong></p>",buttons:[{classes:"btn-success",text:"Yes",click:function(e){confirmed=!0,confirmationModal.close(e)}},{classes:"btn-default",text:"No",click:function(e){confirmationModal.close(e)}}]}}),confirmationModal.result.then(function(event){callback(confirmed)})}}},show:{showPopup:function(title,body,callback){return callback=callback||angular.noop,function(){var modal=openModal({modal:{title:title,html:body,buttons:[{classes:"btn-default",text:"Close",click:function(e){modal.dismiss(e),callback()}}]}},"modal");modal.result.then(function(){(callback||angular.noop)()})}},showOrderDetailsPopup:function(title,order,activeTab,callback){return callback=callback||angular.noop,function(){var modal=$uibModal.open({size:"lg",template:'<div class="modal-header"> <h5>'+title+'</h5> </div><div class="modal-body"><form class="form-horizontal"><order-preview order="order" modal="true" active-tab="tab"></order-preview> </form> </div> <div class="modal-footer"> <button class="btn btn-warning" ng-click="close()" id="close">Close</button> </div>',resolve:{order:function(){return order},tab:function(){return activeTab[0]||activeTab}},controller:function($scope,$uibModalInstance,order,tab){$scope.order=order,$scope.tab=tab,$scope.preview=!0,$scope.close=function(){$uibModalInstance.close()}}});return modal.result.then(function(){(callback||angular.noop)()}),modal}},modalFormDialog:function(title,fields,callback){return callback=callback||angular.noop,function(){openModal({fields:fields,callback:callback,modal:{title:title,form:!0}},"modal")}}}}}]).controller("ModalInstanceCtrl",["$scope","$uibModalInstance","fields","callback",function($scope,$uibModalInstance,fields,callback){$scope.fields=fields,$scope.ok=function(){fields&&callback($scope.fieldsToModel(fields))&&($uibModalInstance.close($scope.fields),$scope.fields.forEach(function(field){field.value=null}))},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.fieldsToModel=function(fields){var model={};return angular.forEach(fields,function(field){var fieldName=field.name||field.title,fieldValue=field.value,path=fieldName.toLowerCase().replace(" ","_").split(".");$scope.setProperty(model,path,fieldValue)}),model},$scope.setProperty=function(obj,keyPath,value){for(var i=0,len=keyPath.length-1;len>i;i++)obj[keyPath[i]]||(obj[keyPath[i]]={}),obj=obj[keyPath[i]];obj[keyPath[i]]=value}}]),angular.module("theBossApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,ngModel){element.on("keydown",function(){return ngModel.$setValidity("mongoose",!0)})}}}),angular.module("theBossApp").controller("NavbarCtrl",["$scope","$location","Auth",function($scope,$location,Auth){$scope.menu=[{title:"Home",link:"/"},{title:"Orders",link:"/order/list"},{title:"Calendar",link:"/calendar"},{title:"Services",link:"/order/services"}],$scope.isCollapsed=!0,$scope.isLoggedIn=Auth.isLoggedIn,$scope.isAdmin=Auth.isAdmin,$scope.getCurrentUser=Auth.getCurrentUser,$scope.status={isopen:!1},$scope.logout=function(){Auth.logout(),$location.path("/login")},$scope.isActive=function(route){return route===$location.path()}}]),angular.module("theBossApp").service("Note",["$resource",function($resource){return $resource("/api/notes/:id",{id:"@_id"},{New:{url:"/api/notes",method:"GET",isArray:!0,params:{resolved:!1}},OrderNotes:{url:"/api/notes",method:"GET",isArray:!0}})}]),angular.module("theBossApp").service("OrderService",["$resource",function($resource){return $resource("/api/orders/:orderId",{orderId:"@_id"},{query:{method:"GET",isArray:!1},services:{url:"/api/orders/services",isArray:!1,method:"GET"},download:{url:"/api/orders/download/:filename",params:{filename:"@filename"},isArray:!1,method:"GET"},newAndNotCompletedServices:{url:"/api/orders/newAndNotCompletedServices",isArray:!0,method:"GET"},newAndNotCompletedServicesOlderThanTwoWeeks:{url:"/api/orders/newAndNotCompletedServicesOlderThanTwoWeeks",isArray:!0,method:"GET"},tasks:{url:"/api/orders/todotasks",method:"GET"},shippingList:{url:"/api/orders/shippingList",method:"GET",isArray:!1},accessories:{url:"/api/orders/accessories",method:"GET",isArray:!1,params:{status:"@status"}},comments:{url:"/api/orders/comments",method:"GET",isArray:!0},getOrders:{url:"/api/orders/calendar/:from/:to/orders/:status",params:{status:"@status",from:"@from",to:"@to"},isArray:!0,method:"GET"},getOtherGroupOrders:{url:"/api/orders/calendar/:from/:to/otherGroupOrders",params:{from:"@from",to:"@to"},isArray:!0,method:"GET"},getOtherGroupServices:{url:"/api/orders/calendar/:from/:to/otherGroupServices",params:{from:"@from",to:"@to"},isArray:!0,method:"GET"},getOrderServices:{url:"/api/orders/calendar/:from/:to/services/:approved/:completed",params:{approved:"@approved",completed:"@completed",from:"@from",to:"@to"},isArray:!0,method:"GET"},setStatus:{url:"/api/orders/:orderId/status/:status",params:{orderId:"@_id",status:"@status"},method:"PATCH"},setdate_required:{url:"/api/orders/:orderId/calendar_update_date/:property/:date",params:{orderId:"@orderId",property:"@property",date:"@date"},method:"PATCH"}})}]),angular.module("theBossApp").service("roles",["$rootScope","Auth",function($rootScope,Auth){var roles={adminRoles:["admin"],salesRepRoles:["sales rep"],serviceRepRoles:["service rep"],otherRoles:["worker"]};return{validateRoleAdmin:function(currentUser){return currentUser=currentUser||$rootScope.currentUser,currentUser?_.contains(roles.adminRoles,currentUser.role)||_.contains(roles.salesRepRoles,currentUser.role):!1},validateServiceApproval:function(currentUser){return currentUser=currentUser||$rootScope.currentUser,currentUser?_.contains(roles.adminRoles,currentUser.role)||_.contains(roles.salesRepRoles,currentUser.role):!1},validateRoleOther:function(currentUser){return currentUser=currentUser||$rootScope.currentUser,currentUser?_.contains(roles.otherRoles,currentUser.role):!1},validateCurrentUserRoleIn:function(matchRoles){matchRoles=matchRoles.split(",");var belongsTo=Object.keys(roles).filter(function(key,index){return matchRoles.indexOf(key)>-1&&roles[key].some(function(element){return element===Auth.getCurrentUser().role})});return belongsTo&&belongsTo.length>0},allRoles:function(){return roles.adminRoles.concat(roles.salesRepRoles).concat(roles.serviceRepRoles).concat(roles.otherRoles)}}}]),angular.module("theBossApp").factory("socket",["socketFactory",function(socketFactory){var ioSocket=io("",{path:"/socket.io-client"}),socket=socketFactory({ioSocket:ioSocket});return{socket:socket,syncUpdates:function(modelName,array,cb){cb=cb||angular.noop,socket.on(modelName+":save",function(item){var oldItem=_.find(array,{_id:item._id}),index=array.indexOf(oldItem),event="created";oldItem?(array.splice(index,1,item),event="updated"):array.push(item),cb(event,item,array)}),socket.on(modelName+":remove",function(item){var event="deleted";_.remove(array,{_id:item._id}),cb(event,item,array)})},unsyncUpdates:function(modelName){socket.removeAllListeners(modelName+":save"),socket.removeAllListeners(modelName+":remove")}}}]),angular.module("theBossApp").service("timeOff",["$resource",function($resource){return $resource("/api/timeoffs/:id",{id:"@_id"},{getTimeOff:{url:"/api/timeoffs/query/:approved/:dateFrom/:dateTo",params:{approved:"@approved",from:"@dateFrom",to:"@dateTo"},isArray:!0,method:"GET"},check:{url:"/api/timeoffs/check",isArray:!0,method:"GET"},"new":{url:"/api/timeoffs/totalNewTimeoffs",isArray:!1,method:"GET"}})}]),angular.module("theBossApp").filter("timeago",function(){return function(input,p_allowFuture){var words,substitute=function(stringOrFunction,number,strings){var string=$.isFunction(stringOrFunction)?stringOrFunction(number,dateDifference):stringOrFunction,value=strings.numbers&&strings.numbers[number]||number;return string.replace(/%d/i,value)},nowTime=(new Date).getTime(),date=new Date(input).getTime(),allowFuture=p_allowFuture||!1,strings={prefixAgo:null,prefixFromNow:null,suffixAgo:"ago",suffixFromNow:"from now",seconds:"less than a minute",minute:"about a minute",minutes:"%d minutes",hour:"about an hour",hours:"about %d hours",day:"a day",days:"%d days",month:"about a month",months:"%d months",year:"about a year",years:"%d years"},dateDifference=nowTime-date,seconds=Math.abs(dateDifference)/1e3,minutes=seconds/60,hours=minutes/60,days=hours/24,years=days/365,separator=void 0===strings.wordSeparator?" ":strings.wordSeparator,prefix=strings.prefixAgo,suffix=strings.suffixAgo;return allowFuture&&0>dateDifference&&(prefix=strings.prefixFromNow,suffix=strings.suffixFromNow),words=45>seconds&&substitute(strings.seconds,Math.round(seconds),strings)||90>seconds&&substitute(strings.minute,1,strings)||45>minutes&&substitute(strings.minutes,Math.round(minutes),strings)||90>minutes&&substitute(strings.hour,1,strings)||24>hours&&substitute(strings.hours,Math.round(hours),strings)||42>hours&&substitute(strings.day,1,strings)||30>days&&substitute(strings.days,Math.round(days),strings)||45>days&&substitute(strings.month,1,strings)||365>days&&substitute(strings.months,Math.round(days/30),strings)||1.5>years&&substitute(strings.year,1,strings)||substitute(strings.years,Math.round(years),strings),input?$.trim([prefix,words,suffix].join(separator)):""}}),angular.module("theBossApp").service("userGroup",["$resource",function($resource){return $resource("/api/user_groups/:id",{id:"@_id"})}]),angular.module("theBossApp").run(["$templateCache",function($templateCache){$templateCache.put("app/account/login/login.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class="col-md-3 col-md-offset-4"><div class="login-panel panel panel-default"><div class=panel-heading><h3 class=panel-title>Please Sign In</h3></div><div class=panel-body><form role=form name=form ng-submit=login(form) novalidate><fieldset><div class=form-group ng-class="{ \'has-error\' : form.email.$invalid && !form.email.$pristine }"><input type=email placeholder=E-mail name=email class=form-control ng-model=user.email ng-required=true><p ng-show="form.email.$invalid && !form.email.$pristine" class=help-block>Enter a valid email.</p></div><div class=form-group ng-class="{ \'has-error\' : form.password.$invalid && !form.password.$pristine }"><input type=password placeholder=Password name=password class=form-control ng-model=user.password ng-required=true><p ng-show="form.password.$invalid && !form.password.$pristine" class=help-block>Enter password.</p></div><div class=checkbox><label><input type=checkbox name=remember data-ng-click=rememberMe() data-ng-model="remember"> Remember Me</label></div><div class=form-group ng-class="{ \'has-error\' :  errors.other}"><p class=help-block>{{ errors.other }}</p></div><!-- Change this to a button or input when using this as a form --><button type=submit class="btn btn-lg btn-success btn-block" ng-disabled=form.$invalid>Sign in</button></fieldset></form></div></div></div></div></div>'),$templateCache.put("app/account/settings/settings.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><h1>Settings</h1><div class=row><div class=col-sm-4><div class="panel panel-default"><div class=panel-heading>Change Password</div><div class=panel-body><form class=form name=form ng-submit=changePassword(form) novalidate><div class=form-group><label>Current Password</label><input type=password name=password class=form-control ng-model=user.oldPassword mongoose-error><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.other }}</p></div><div class=form-group><label>New Password</label><input type=password name=newPassword class=form-control ng-model=user.newPassword ng-minlength=3 required><p class=help-block ng-show="(form.newPassword.$error.minlength || form.newPassword.$error.required) && (form.newPassword.$dirty || submitted)">Password must be at least 3 characters.</p></div><p class=help-block>{{ message }}</p><button class="btn btn-lg btn-primary" type=submit>Save changes</button></form></div></div></div><div class=col-sm-8><div class="panel panel-default"><div class=panel-heading>Add Time off</div><div class=panel-body><form class=form name=formTimeoff ng-submit=addNewRequest(formTimeoff)><div field ng-model=timeoff.detail ng-field="{title:\'Detail\', type:\'textarea\', require: true}"></div><div field ng-model=timeoff.type ng-field="{title:\'Type\', type:\'select\', require: true, show_options: \'Vacation,Sick,Day off,Statutory holiday\'}"></div><div field ng-model=timeoff.from ng-field="{title:\'From\', type:\'date\', require:true, show_options: [{showMinToday:true}]}"></div><div field ng-model=timeoff.to ng-field="{title:\'To\', type:\'date\', require:true, show_options: [{showMinToday:true}]}"></div><div class=form-group><div class="col-sm-offset-4 col-sm-10"><button type=submit class="btn btn-success">Add</button></div></div></form></div></div><table class="table table-striped"><tr><th>#</th><th>Detail</th><th>Type</th><th>Date From</th><th>Date To</th><th>Created By</th><th restricted-access>Approved</th><th></th></tr><tr ng-repeat="timeoff in timeoffs" ng-class="{\'success\': timeoff.approved}"><td>{{$index + 1}}</td><td>{{timeoff.detail}}</td><td>{{timeoff.type}}</td><td>{{timeoff.from | date}}</td><td>{{timeoff.to | date}}</td><td>{{timeoff.createdBy.name}}</td><td restricted-access><label><input type=checkbox ng-model=timeoff.approved ng-click=approveToggle($index,timeoff)></label></td><td><button class="btn btn-danger btn-xs" ng-click=delete($index,timeoff)><span class="glyphicon glyphicon-trash"></span></button></td></tr></table></div></div></div>'),$templateCache.put("app/account/signup/signup.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div ng-include="\'app/account/user/user.menu.html\'"></div><div class=col-md-10><div class="panel panel-default"><div class=panel-heading><h3 class=panel-title>Create new user</h3></div><div class=panel-body><form role=form name=form class=inline ng-submit=register(form) novalidate><fieldset><div class=form-group ng-class="{ \'has-error\' : form.name.$invalid && !form.name.$pristine }"><input placeholder=Name name=email class=form-control ng-model=user.name ng-required=true><p ng-show="form.name.$invalid && !form.name.$pristine" class=help-block>Enter a valid name.</p></div><div class=form-group ng-class="{ \'has-error\' : form.email.$invalid && !form.email.$pristine }"><input type=email placeholder=E-mail name=email class=form-control ng-model=user.email ng-required=true><p ng-show="form.email.$invalid && !form.email.$pristine" class=help-block>Enter a valid email.</p></div><div class=form-group ng-class="{ \'has-error\' : form.password.$invalid && !form.password.$pristine }"><input type=password placeholder=Password name=password class=form-control ng-model=user.password ng-minlength=3 required mongoose-error><p class=help-block ng-show="(form.password.$error.minlength || form.password.$error.required)">Password must be at least 3 characters.</p><p class=help-block ng-show=form.password.$error.mongoose>{{ errors.password }}</p></div><div class=form-group><div class="btn-group col-sm-4"><label>Role</label></div><div class="btn-group col-sm-8"><label class="btn btn-primary" ng-model=user.role btn-radio="\'admin\'">Admin</label><label class="btn btn-primary" ng-model=user.role btn-radio="\'service rep\'">Service Rep</label><label class="btn btn-primary" ng-model=user.role btn-radio="\'user\'">Sale Rep</label><label class="btn btn-primary" ng-model=user.role btn-radio="\'worker\'">Worker</label></div></div><div class=form-group><div field ng-model=user.group ng-field="{title: \'Group/Division\', type: \'select\', require: false, show_options: groups}"></div></div><div class=form-group ng-class="{ \'has-error\' :  errors.other}"><p class=help-block>{{ errors.other }}</p></div><br><!-- Change this to a button or input when using this as a form --><button type=submit class="btn btn-success btn-block" ng-disabled=form.$invalid>Submit</button></fieldset></form></div></div></div></div><!--\n        <hr>\n        <div>\n          <a class="btn btn-facebook" href="" ng-click="loginOauth(\'facebook\')">\n            <i class="fa fa-facebook"></i> Connect with Facebook\n          </a>\n          <a class="btn btn-google-plus" href="" ng-click="loginOauth(\'google\')">\n            <i class="fa fa-google-plus"></i> Connect with Google+\n          </a>\n        </div> --></div>'),$templateCache.put("app/account/user/user.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div ng-include="\'app/account/user/user.menu.html\'"></div><div class=col-md-10><div class="panel panel-default"><div class=panel-heading>User search</div><div class=panel-body><div class=well><div class=row><div class=col-md-6><form ng-submit=loadUsers()><div class=input-group><input class=form-control ng-model=queryText placeholder="Search for..."> <span class=input-group-btn><input type=submit class="btn btn-secondary" type=button>Go!</span></div></form></div><div class=col-md-6><a class="btn btn-primary" ng-click=addNewUser()>New User</a> <a class="btn btn-success" ng-click=addNewGroup()>New Group/Division</a></div></div></div><div class=row><div class=col-md-12><ul class=list-group><li href=# class=list-group-item ng-repeat="user in users"><!-- Simple dropdown --><span uib-dropdown on-toggle=toggled(open) class=pull-right aria-label="User actions"><a href id=simple-dropdown uib-dropdown-toggle>...</a><ul class=dropdown-menu uib-dropdown-menu aria-labelledby=simple-dropdown><li><a ng-click=resetPassword(user)>Reset password</a></li></ul></span><h4 class=list-group-item-heading>{{ user.name }}</h4><label>{{ user.email }}</label><div class=list-group-item-text><div class=row><div class=col-md-3><!-- Role --><div class=btn-group uib-dropdown><button id=single-button type=button class="btn btn-secondary btn-sm" uib-dropdown-toggle>Role: {{ user.role }} <span class=caret></span></button><ul class=dropdown-menu uib-dropdown-menu role=menu aria-labelledby=single-button><li role=menuitem><a href=# ng-repeat="role in allRoles" ng-click="changRole(user, role)">{{ role }}</a></li></ul></div></div><div class=col-md-7><div class=btn-toolbar role=toolbar aria-label="User groups"><div class=btn-group role=group aria-label={{group}} ng-repeat="group in groups"><button class="btn btn-primary-outline btn-xs" ng-class="{\'btn-primary\': (user.groups.indexOf(group) > -1)}" ng-click=selectGroup(user,group)>{{ group }}</button></div></div></div><div class=col-md-2><button type=button class="btn btn-danger pull-right" ng-click=delete(user,$index)>Delete</button></div></div></div></li></ul></div></div></div></div></div></div></div>'),
$templateCache.put("app/account/user/user.menu.html",'<div class=col-md-2><div class="panel panel-default"><div class=panel-heading><h3 class=panel-title>Search by role</h3></div><div class=panel-body><ul class=list-group><a href=/user/{{role}} class=list-group-item ng-repeat="role in allRoles">{{role}}</a> <a href=/user class=list-group-item active-url>all roles</a></ul></div></div><div class="panel panel-default"><div class=panel-heading><h3 class=panel-title>Search by group</h3></div><div class=panel-body><ul class=list-group><a href=/user/group/{{group}} class=list-group-item active-url ng-repeat="group in groups">{{group}}</a></ul></div></div></div>'),$templateCache.put("app/admin/admin.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><p>The delete user and user index api routes are restricted to users with the \'admin\' role.</p><ul class=list-group><li class=list-group-item ng-repeat="user in users"><strong>{{user.name}}</strong><br><span class=text-muted>{{user.email}}</span> <a ng-click=delete(user) class=trash><span class="glyphicon glyphicon-trash pull-right"></span></a></li></ul></div>'),$templateCache.put("app/calendar/calendar-services.html","<div ui-calendar=uiConfig.calendar calendar=myCalendar ng-model=eventSources></div>"),$templateCache.put("app/calendar/calendar-status.html","<div ui-calendar=uiConfig.calendar calendar=myCalendar ng-model=eventSources></div>"),$templateCache.put("app/calendar/calendar.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div class=row><div class=col-md-10><div ui-view><div ui-calendar=uiConfig.calendar calendar=myCalendar ng-model=eventSources></div></div></div><div class=col-md-2><div class="panel panel-default"><div class=panel-heading>Jobs</div><div class=panel-body><ul class=list-group><a ng-href=/calendar/jobs/new class=list-group-item active-url>New, pending approval</a> <a href=/calendar/jobs/approved class=list-group-item active-url>Approved</a> <a href=/calendar/jobs/finished class=list-group-item active-url>Completed</a> <a href=/calendar/jobs class=list-group-item active-url>All</a></ul></div><div class=panel-footer><form ng-submit=loadOrders()><div class=input-group><input class=form-control ng-model=queryText> <span class=input-group-btn><button class="btn btn-default" type=submit>Search</button></span></div><!-- /input-group --></form></div></div><div class="panel panel-danger"><div class=panel-heading>Services</div><div class=panel-body><ul class=list-group><a href=/calendar/service/false/false class=list-group-item active-url>New, pending approval</a> <a href=/calendar/service/true/false class=list-group-item active-url>Approved</a> <a href=/calendar/service/true/false class=list-group-item active-url>Not Completed</a> <a href=/calendar/service/true/true class=list-group-item active-url>Completed</a> <a href=/calendar/service class=list-group-item active-url>All</a></ul></div></div><div class="panel panel-default"><div class=panel-heading>Legend</div><div class=panel-body><span class="label label-warning">New Unapproved Orders</span> <span class="label label-default">Approved</span> <span class="label label-primary">In Progress</span> <span class="label label-success">Construction Complete</span> <span class="label label-danger">Service/Blocked</span> <span class="label label-dark">New Installation Date</span> <span class="label label-bright">Shipped/Service Completed</span> <span class="label label-timeoff">Time Off</span> <span class="label label-reserved">Reserved Jobs/Services</span></div></div></div></div></div>'),$templateCache.put("app/form/form.html","<div class=col-md-12>This is the form view.</div>"),$templateCache.put("app/main/main.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div restrict-access="admin, user"><uib-tabset active=activeJustified justified=true><uib-tab index=0><uib-tab-heading><i class="fa fa-briefcase fa-3x"></i> Work Log</uib-tab-heading><work-log></work-log></uib-tab><uib-tab index=1><uib-tab-heading><i class="fa fa-shopping-cart fa-3x"></i> New Orders</uib-tab-heading><new-orders></new-orders></uib-tab><uib-tab index=2><uib-tab-heading><i class="fa fa-wrench fa-3x"></i> Services</uib-tab-heading><services></services></uib-tab><uib-tab index=3><uib-tab-heading><i class="fa fa-envelope fa-3x"></i> New Notes</uib-tab-heading><notes></notes></uib-tab><uib-tab index=4><uib-tab-heading><i class="fa fa-truck fa-3x"></i> Shipping List</uib-tab-heading><shipping-list></shipping-list></uib-tab><uib-tab index=5><uib-tab-heading><i class="fa fa-money fa-3x"></i> Ordered Accessories</uib-tab-heading><accessories></accessories></uib-tab></uib-tabset></div></div><footer class=footer><div class=container><p>theBOSS 1.1</p></div></footer>'),$templateCache.put("app/order/order-detail/order-detail.html",'<div class=col-md-12><h2>{{getOrderName()}}</h2><form name=form class=form-horizontal role=form novalidate ng-submit=save(form) ng-class={submitted:submitted}><div class=row><div class=col-md-4><div class="panel panel-default"><div class=panel-body><ul class=list-group><li class="list-group-item list-group-item-info"><span class=pull-right><order-status></order-status></span> Status:</li><li class="list-group-item list-group-item-info"><span class=pull-right>{{ order.createdBy.name }} on {{ order.created_on | date }}</span> Created by:</li><li class="list-group-item list-group-item-info"><span class=pull-right>{{ order.last_updated_by.name }} on {{ order.last_updated_on | date }}</span> Last updated by:</li><li class="list-group-item list-group-item-info"><span class=pull-right>{{ order.date_required | date }}</span> Required Date</li><li class="list-group-item list-group-item-info" ng-if=order._id><div class=row><div class=col-md-4>Installation Date</div><div class=col-md-8><p class=input-group><input class=form-control uib-datepicker-popup={{format}} ng-model=order.installation_date is-open=opened min-date=minDate data-show-weeks=false data-show-today=false datepicker-options=dateOptions date-disabled="disabled(date, mode)" ng-required=true close-text="Close"> <span class=input-group-btn><button type=button class="btn btn-default" ng-click=open($event)><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></div></li><li ng-if=order.installation_by.name class="list-group-item list-group-item-info"><span class=pull-right>{{ order.installation_by.name }}</span> <strong>Installed By</strong></li><li class="list-group-item list-group-item-info" ng-if=order._id><div field ng-model=order.installation_by ng-field="{title:\'Installed&nbsp;by\', type:\'user\'}"></div></li></ul><order-workflow order=order restricted-access ng-if=!isNewOrder()></order-workflow><br><div class="btn-group btn-group-justified" restricted-access ng-if=!isNewOrder()><div class=btn-group><button type=button class="btn btn-default" ng-click=edit()>Edit</button></div><div class=btn-group><button type=button class="btn btn-danger" ng-click=delete()>Delete</button></div></div></div></div></div><div class=col-md-8><uib-tabset justified=true ng-if=!preview><uib-tab><uib-tab-heading>Order&nbsp;<span class=badge ng-show=order.total_working_hours>{{ order.total_working_hours }} working hours</span></uib-tab-heading><div class=well><order-details order=order></order-details></div></uib-tab><uib-tab heading=Tasks disabled><div class=well><p>Add list of tasks that needs to be done to finish the order.</p><order-tasks></order-tasks></div></uib-tab><uib-tab active=actives.two heading=Accessories><div class=well><p>Add list of accessories that was ordered from the manufacturers and needs to be received.</p><order-accessories></order-accessories></div></uib-tab><uib-tab heading=Services disabled><div class=well><p>Add list of services associated with this order.</p><div class="panel panel-default"><div class=panel-heading>Services<div class=pull-right><div class=btn-group><button type=button class="btn btn-default btn-xs" id=add ng-click=addNewService(order)>Add new service</button></div></div></div><div class=panel-body><div class=list-group><div class=list-group-item class=list-group-item-success><div><h4 class=list-group-item-heading>{{order.po_number}} - Installation <a ng-href=/order/detail/{{order._id}}/print/Installation><span class="glyphicon glyphicon-print"></span></a></h4><p class=list-group-item-text>{{ order.installation_date | date }}</p></div></div><order-services></order-services></div></div></div></div></uib-tab><uib-tab heading=Files disabled><div class=well><p>Add list of files associated with this order.</p><file-uploads model=order upload-url="/api/orders/{{ order._id }}/upload"></file-uploads></div></uib-tab></uib-tabset><order-preview order=order ng-if=preview></order-preview></div></div><div class=well ng-if=!preview><button type=submit class="btn btn-default">Save</button> <button type=button class="btn btn-default" ng-click=reset()>Reset</button><ul class=list-group><li class="list-group-item list-group-item-danger" ng-repeat="error in errors">{{error.message}}</li></ul></div></form></div>'),$templateCache.put("app/order/order-list/order-list.html",'<div class=row><div class=col-md-2><div class="panel panel-default"><div class=panel-heading>Filters</div><div class=panel-body><p>Select your orders by quick search by status or advanced search by additional order properties</p><a restricted-access=adminRoles,salesRepRoles,serviceRepRoles class="btn btn-primary btn-lg" ui-sref=order.new>New Order</a></div><ul class=list-group><a href=/order/list/new class=list-group-item active-url>New, pending approval</a> <a href=/order/list/approved class=list-group-item active-url>Approved</a> <a href=/order/list/finished class=list-group-item active-url>Completed</a> <a href=/order/list class=list-group-item active-url>All</a></ul></div></div><div class=col-md-10><div class="panel panel-default"><div class=panel-heading>Order search</div><div class=panel-body><div class=well><form ng-submit=loadOrders()><div class=row><div class=col-lg-6><div class=input-group><input class=form-control ng-model=queryText placeholder="Search order..."> <span class=input-group-btn><button class="btn btn-default" type=button ng-click=loadOrders()>Search</button></span></div><!-- /input-group --></div><!-- /.col-lg-6 --></div></form></div><div class=row><div class=col-md-12><div class=table-responsive><table class="table table-hover table-condensed"><thead><tr><th>#</th><th>Customer</th><th>Date Required</th><th>Shipped Date</th><th>Status</th><th>Created By</th><th>Created On</th></tr></thead><tbody><tr ng-repeat="order in orders"><td><a href="/order/detail/{{ order._id }}/" tooltip=asdasd>{{ order.po_number }}</a></td><td><a href="/order/detail/{{ order._id }}/">{{ order.customer.name }}</a></td><td>{{ order.date_required | date }} <span class="label label-default pull-right" ng-show=order.installation_date>{{ order.installation_date | date }}</span></td><td>{{ order.shipped_date | date }}</td><td><order-status></order-status></td><td>{{ order.createdBy.name }}<p ng-show=order.group><span class="label label-primary pull-left">{{ order.group }}</span></p></td><td>{{ order.created_on | date }}</td></tr></tbody></table><uib-pagination ng-model=currentPage total-items=totalOrders page=currentPage max-size=maxSize class=pagination-sm boundary-links=true rotate=false num-pages=numPages></uib-pagination><pre>Page: {{currentPage}} / {{numPages}}</pre></div></div></div></div></div></div></div>'),$templateCache.put("app/order/order-print/order-print.html",'<div class=row><div class=col-xs-4><img ng-src=assets/images/logo.png height=100px></div><div class=col-xs-4><h4><strong>{{action}} Form</strong></h4></div><div class=col-xs-4><span class=pull-right>766 York Road<br>N.O.T.L, ON L0S 1J0<br>Phone: 905-685-6567<br>Fax: 905-685-0585</span></div></div><br><div class=row><div class=col-xs-6><strong>Customer Name:</strong>&nbsp;{{order.customer.name}}</div><div class=col-xs-6>{{ getFormDate()}} - PO# {{order.po_number}}</div></div><div class=row><div class=col-xs-12><p>Address: {{order.customer.ship_to}}</p><p ng-if=order.customer.phone>Contact Number: {{order.customer.phone}}</p><p ng-if=order.customer.cell>Secondary Number: {{order.customer.cell}}</p></div></div><div class=row><div class=col-xs-12><strong>Day 1:</strong></div></div><div class=row><div class=col-xs-6>Arrival Time: ___________________</div><div class=col-xs-6>Time of Completion: ___________________</div></div><div class=row><div class=col-xs-12><strong>Day 2:</strong></div></div><div class=row><div class=col-xs-6>Arrival Time: ___________________</div><div class=col-xs-6>Time of Completion: ___________________</div></div><div class=row><div class=col-xs-12><strong>Day 3:</strong></div></div><div class=row><div class=col-xs-6>Arrival Time: ___________________</div><div class=col-xs-6>Time of Completion: ___________________</div></div><br><br><div class=row><div class=col-xs-12><strong>Deficiency List:</strong></div><div class="col-xs-12 filldetails">{{details}}</div></div><div class="row pull-bottom"><div class=col-xs-12><div class=row><div class=col-xs-12>Please sign in agreement of completion or deficiency list above:</div></div><div class=row><div class=col-xs-6><strong ng-if=done_by>Installer: {{done_by.name}}</strong> <strong ng-if=!done_by>Installer: ______________________________</strong></div><div class=col-xs-6><strong>Date: ______________________________</strong></div></div><div class=row><div class=col-xs-6><strong>Customer: ______________________________</strong></div><div class=col-xs-6><strong>Date: ______________________________</strong></div></div><br><div class="row hidden-print"><div class=col-xs-12><button type=button class="btn btn-primary btn-lg btn-block" ng-click=print()>Print</button></div></div></div></div>'),$templateCache.put("app/order/order-services/order-services.html",'<div class=row><div class=col-md-2><div class="panel panel-default"><div class=panel-heading>Filters</div><ul class=list-group><a href=/order/services/pending class=list-group-item active-url>New, pending</a> <a href=/order/services/finished class=list-group-item active-url>Completed</a> <a href=/order/services class=list-group-item active-url>All</a></ul></div></div><div class=col-md-10><div class="panel panel-default"><div class=panel-heading>Order search</div><div class=panel-body><div class=well><form ng-submit=loadOrders()><div class=row><div class=col-lg-6><div class=input-group><input class=form-control ng-model=queryText placeholder="Search order..."> <span class=input-group-btn><button class="btn btn-default" type=button ng-click=loadOrders()>Search</button></span></div><!-- /input-group --></div><!-- /.col-lg-6 --></div></form></div><div class="panel panel-default"><div class=panel-heading>Services</div><div class=panel-body><div class=row><uib-accordion><uib-accordion-group heading={{getOrderName(order)}} ng-repeat="order in orders"><div class=well><order-services order=order></order-services></div></uib-accordion-group></uib-accordion><uib-pagination ng-model=currentPage total-items=totalOrders page=currentPage max-size=maxSize class=pagination-sm boundary-links=true rotate=false num-pages=numPages></uib-pagination><pre>Page: {{currentPage}} / {{numPages}}</pre></div></div></div></div></div></div></div>'),$templateCache.put("app/order/order.html",'<div ng-include="\'components/navbar/navbar.html\'"></div><div class=container><div ui-view=""></div></div>'),$templateCache.put("components/directives/accessories/accessories.html",'<div class="panel panel-default"><div class=panel-heading>Ordered Accessories</div><div class=panel-body><div class=pannel ng-repeat="item in orders"><h4>{{ item.customer.name }} - {{ item.po_number }}</h4><div class=table-responsive><table class="table table-striped table-bordered table-hover"><thead><tr class=active><th>From</th><th>Description</th><th>Items Ordered</th><th>Items Received</th></tr></thead><tbody><tr ng-repeat="accessory in item.ordered_accessories | filter:notreceived "><td>{{ accessory.from_manufacturer }}</td><td>{{ accessory.description }}</td><td>{{ accessory.quantity }}</td><td><div class=row><div class=col-md-6><div class="input-group input-group-sm"><input type=number class=form-control placeholder="Items received" ng-model=accessory.items_received></div></div><div class=col-md-6><button type=submit data-ng-click="saveUpdates($index, item, accessory)" class="btn btn-default">Update</button></div></div></td></tr></tbody></table></div></div><div class=panel-footer><uib-pagination total-items=totalOrders ng-model=currentPage page=currentPage max-size=maxSize class=pagination-sm boundary-links=true rotate=false num-pages=numPages></uib-pagination><pre>Page: {{currentPage}} / {{numPages}}</pre></div></div></div>'),$templateCache.put("components/directives/alerts/alerts.html",'<li class=dropdown><a class=dropdown-toggle data-toggle=dropdown href=# aria-expanded=false><i class="fa fa-bell fa-fw"></i><span class=badge>{{alerts.length}}</span> <i class="fa fa-caret-down"></i></a><ul class="dropdown-menu dropdown-alerts"><li ng-repeat="alert in alerts"><a ng-href={{alert.url}}><div><i class="fa {{alert.icon}} fa-fw"></i> {{alert.type}} <span class="pull-right text-muted small">{{alert.message}}</span></div></a></li></ul><!-- /.dropdown-alerts --></li>'),$templateCache.put("components/directives/field-upload/field-upload.html",'<div class=row ng-if=!preview><div class=form-group><label class="control-label col-sm-2">Select Files</label><div class=col-sm-8><input type=file ng-file-select=onFileSelect($files) multiple class=form-control></div></div><div class=form-group><label class="control-label col-sm-2"></label><div class=col-sm-8><div class=drop-box ng-file-drop=onFileSelect($files) ng-file-drag-over-class=optional-css-class ng-show=dropSupported>drop files here</div><div ng-file-drop-available="dropSupported=true" ng-show=!dropSupported>HTML5 Drop File is not supported!</div></div></div></div><div class=row><div class=col-sm-6 ng-if=!preview><div class="panel panel-default"><!-- Default panel contents --><div class=panel-heading><div ng-show="selectedFiles != null">Uploading files</div><div ng-show=!selectedFiles>No files selected</div></div><div class=panel-body><div class=row ng-repeat="f in selectedFiles"><div class=col-sm-6><progressbar value=progress[$index]><i>{{ f.name }}</i></progressbar></div><div class=col-sm-2><button ng-show="progress[$index] < 0" ng-click=start($index) class="button ng-hide">Start</button> <button ng-show="hasUploader($index) && progress[$index] < 100" ng-click=abort($index) class="button ng-hide">Abort</button></div></div><button ng-click=upload.abort() ng-show=hasUploadingInProgress() class=form-control>Cancel Upload</button></div></div></div><div ng-class="{\'col-sm-6\': !preview, \'col-sm-12\': preview}"><div class="panel panel-default"><!-- Default panel contents --><div class=panel-heading>Uploaded files</div><div class=panel-body><div class=list-group><div class=list-group-item ng-repeat="f in model.uploaded_files"><i class="fa fa-ban btn" ng-click=deleteFile(f,$index,$event)></i> <a href="/uploads/{{ encodeFileName(f.filename) }}" target=_blank>{{ f.filename }} <span class=badge>{{ f.size }} kb</span></a></div></div></div></div></div></div>'),$templateCache.put("components/directives/file-uploads/field-upload.html",'<div class=row ng-if=!preview><div class=form-group><label class="control-label col-sm-2">Select Files</label><div class=col-sm-8><input type=file ng-file-select=onFileSelect($files) multiple class=form-control></div></div><div class=form-group><label class="control-label col-sm-2"></label><div class=col-sm-8><div class=drop-box ng-file-drop=onFileSelect($files) ng-file-drag-over-class=optional-css-class ng-show=dropSupported>drop files here</div><div ng-file-drop-available="dropSupported=true" ng-show=!dropSupported>HTML5 Drop File is not supported!</div></div></div></div><div class=row><div class=col-sm-6 ng-if=!preview><div class="panel panel-default"><!-- Default panel contents --><div class=panel-heading><div ng-show="selectedFiles != null">Uploading files</div><div ng-show=!selectedFiles>No files selected</div></div><div class=panel-body><div class=row ng-repeat="f in selectedFiles"><div class=col-sm-6><progressbar value=progress[$index]><i>{{ f.name }}</i></progressbar></div><div class=col-sm-2><button ng-show="progress[$index] < 0" ng-click=start($index) class="button ng-hide">Start</button> <button ng-show="hasUploader($index) && progress[$index] < 100" ng-click=abort($index) class="button ng-hide">Abort</button></div></div><button ng-click=upload.abort() ng-show=hasUploadingInProgress() class=form-control>Cancel Upload</button></div></div></div><div ng-class="{\'col-sm-6\': !preview, \'col-sm-12\': preview}"><div class="panel panel-default"><!-- Default panel contents --><div class=panel-heading>Uploaded files</div><div class=panel-body><div class=list-group><div class=list-group-item ng-repeat="f in model.uploaded_files"><i class="fa fa-ban btn" ng-click=deleteFile(f,$index,$event)></i> <a ng-click="downloadFile({{ encodeFileName(f.filename) }})" target=_blank>{{ f.filename }} <span class=badge>{{ f.size }} kb</span></a></div></div></div></div></div></div>'),$templateCache.put("components/directives/file-uploads/file-uploads.html",'<div class=row ng-if=!preview><div class=form-group><label class="control-label col-sm-2">Select Files</label><div class=col-sm-8><input type=file ng-file-select=onFileSelect($files) multiple class=form-control></div></div><div class=form-group><label class="control-label col-sm-2"></label><div class=col-sm-8><div class=drop-box ng-file-drop=onFileSelect($files) ng-file-drag-over-class=optional-css-class ng-show=dropSupported>drop files here</div><div ng-file-drop-available="dropSupported=true" ng-show=!dropSupported>HTML5 Drop File is not supported!</div></div></div></div><div class=row><div class=col-sm-6 ng-if=!preview><div class="panel panel-default"><!-- Default panel contents --><div class=panel-heading><div ng-show="selectedFiles != null">Uploading files</div><div ng-show=!selectedFiles>No files selected</div></div><div class=panel-body><div class=row ng-repeat="f in selectedFiles"><div class=col-sm-6><uib-progressbar value=progress[$index]><i>{{ f.name }}</i></uib-progressbar></div></div></div></div></div><div ng-class="{\'col-sm-6\': !preview, \'col-sm-12\': preview}"><div class="panel panel-default"><!-- Default panel contents --><div class=panel-heading>Uploaded files</div><div class=panel-body><div class=list-group><div class=list-group-item ng-repeat="f in model.uploaded_files track by $index"><i class="fa fa-ban btn" ng-click=deleteFile(f,$index,$event)></i> <a ng-href="/api/orders/download/{{ encodeFileName(f.filename) }}" target=_blank>{{ f.filename }} <span class=badge>{{ f.size }} kb</span></a></div></div></div></div></div></div>'),$templateCache.put("components/directives/form/form.html",'<div class="panel panel-default"><!-- Default panel contents --><div class=panel-heading tooltip-placement=right tooltip="Add new form from the list" ng-if=!preview>{{ module }}<div class=pull-right><div class=btn-group dropdown><button type=button class="btn btn-default btn-xs dropdown-toggle" data-toggle=dropdown aria-haspopup=true aria-expanded=false>Add <span class=caret></span></button><ul class="dropdown-menu pull-right" class=dropdown-menu aria-labelledby=dLabel><li ng-repeat="form in moduleForms"><a href="" ng-click=addForm(form)>Add {{ form.formName }}</a></li><li class=divider restricted-access></li><li restricted-access><a href=# ng-click=addNewForm()>New Form</a></li></ul></div></div></div><div class=panel-heading ng-if=preview>{{ module }}</div><div class=panel-body><uib-accordion close-others=oneAtATime><uib-accordion-group heading={{form.formName}} ng-repeat="form in listOfForms" is-open=$first><uib-accordion-heading><i class="fa fa-ban" ng-click=removeForm(listOfForms,$index,$event) ng-if="!preview && !form.required"></i> <span>{{form.formName}}</span><div class="btn-group-xs pull-right" tooltip-placement=right tooltip="Add new field or delete the {{form.formName}}" ng-if=!preview restricted-access><button type=button class="btn btn-default fa fa-plus" ng-click=addField(form,$event)></button> <button type=button class="btn btn-default fa fa-trash-o" ng-if=!form.required ng-click=deleteForm(form,$event,$index)></button></div></uib-accordion-heading><field ng-model=field.value index=$index ng-field=field ng-repeat="field in form.fields" field-form=form edit=editField(form,field) delete=deleteFormField(form,field,$index) ng-if=!preview></field><div ng-if=preview><div class=form-group ng-repeat="field in form.fields"><label class="col-md-4 control-label">{{ field.title }}</label><div class="form-control-static col-md-8">{{ field.value }}</div></div></div></uib-accordion-group></uib-accordion><div class=warning ng-if="!listOfForms || listOfForms.length==0" class=animate-if>Nothing to show yet</div></div></div>'),$templateCache.put("components/directives/new-orders/new-orders.html",'<div class="panel panel-yellow"><div class=panel-heading><div class=row><div class=col-xs-3><i class="fa fa-shopping-cart fa-5x"></i></div><div class="col-xs-9 text-right"><div class=huge>{{ totalOrders }}</div><div>New Orders!</div><div></div></div></div></div><a href="" ng-click="isCollapsed = !isCollapsed"><div class=panel-footer><span class=pull-left>View orders</span> <span class=pull-right><i class="fa fa-arrow-circle-right"></i></span><div class=clearfix></div></div></a><div><div class=list-group><a ng-href="/order/detail/{{order._id}}/" class=list-group-item ng-repeat="order in orders">#{{order.po_number}} For: {{order.customer.name}} - Required By {{order.date_required | date}}</a></div></div></div>'),$templateCache.put("components/directives/note/note.html",'<h4>Add New Note</h4><form name=form class=form-horizontal role=form novalidate ng-submit=saveNote(form.$valid) ng-class={submitted:submitted}><table class=table><tr><th>Order</th><td><div class=form-group ng-class="{ \'has-error\' : form.order.$invalid || !note.order}"><input name=order ng-model=note.asyncSelected placeholder="Lookup an order" ng-required=true uib-typeahead="(orders.po_number + \', \' + orders.customer.name) for orders in loadOrders($viewValue)" typeahead-loading=loadingLocations typeahead-on-select="selectedOrder($item, $model, $label)" class=form-control> <i ng-show=loadingLocations class="glyphicon glyphicon-refresh"></i><p ng-show="form.order.$invalid && !form.order.$pristine || !note.order" class=help-block>Select Order</p></div></td></tr><tr><th>Note</th><td><div class=form-group ng-class="{ \'has-error\' : form.note.$invalid }"><textarea name=note ng-model=note.content placeholder=Note ng-required=true class=form-control></textarea><p ng-show="form.order.$invalid && !form.order.$pristine || !note.content" class=help-block>Enter Note</p></div></td></tr></table><div class=form-group><div class="col-sm-offset-4 col-sm-8"><button type=submit class="btn btn-default" ng-disabled="form.$invalid || !note.content || !note.order">Save Note</button></div></div></form>'),$templateCache.put("components/directives/note/note.old.html",'<p class=text-primary>Add new note to a particular order</p><form name=form class=form-horizontal role=form novalidate ng-submit=saveNote(form.$valid) ng-class={submitted:submitted}><div class=input-group id=note ng-class="{ \'has-error\' : form.order.$invalid || !note.order || !note.content}"><input name=order id=note-orderid ng-model=note.asyncSelected placeholder="Lookup an order" ng-required=true uib-typeahead="(orders.po_number + \', \' + orders.customer.name) for orders in loadOrders($viewValue)" typeahead-loading=loadingLocations typeahead-on-select="selectedOrder($item, $model, $label)" class="form-control input-sm"> <i ng-show=loadingLocations class="glyphicon glyphicon-refresh"></i> <input id=btn-input id=note-message class="form-control input-sm" ng-model=note.content ng-required=true placeholder="Type your message here..."> <span class=input-group-btn><button class="btn btn-warning btn-xl" id=btn-chat>Send</button></span></div><p ng-show="form.order.$invalid && !form.order.$pristine || !note.order" class=help-block>You need to select existing order first</p></form>'),$templateCache.put("components/directives/notes/notes.html",'<div class="panel panel-primary"><div class=panel-heading><div class=row><div class=col-xs-3><i class="fa fa-envelope fa-5x"></i></div><div class="col-xs-9 text-right"><div class=huge>{{ notes.length }}</div><div>New Notes!</div></div></div></div><div><div class="chat-panel panel panel-default"><div class=panel-heading><i class="fa fa-comments fa-fw"></i> Recent Notes</div><!-- /.panel-heading --><div class=panel-body><ul class=chat><li class=clearfix ng-class-odd="\'left\'" ng-class-even="\'right\'" ng-repeat="item in notes"><span class=chat-img ng-class-odd="\'pull-left\'" ng-class-even="\'pull-right\'"><img class=img-circle alt="{{ item.from.name }}" src=http://placehold.it/50/55C1E7/fff></span><div class="chat-body clearfix"><div class=header><strong class=primary-font ng-class-odd="\'\'" ng-class-even="\'pull-right\'"><a href="/order/detail/{{ item.order._id }}/">{{ item.from.name }} - {{ item.order.po_number }}</a></strong> <small class=text-muted ng-class-odd="\'pull-right\'" ng-class-even="\'\'"><i class="fa fa-clock-o fa-fw"></i> {{ item.posted_on | timeago }}</small></div><p>{{ item.content }}</p></div></li></ul></div><!-- /.panel-body --><div class=panel-footer><note></note></div><!-- /.panel-footer --></div></div></div>'),$templateCache.put("components/directives/order/order-accessories/order-accessories.html",'<div class="panel panel-default"><div class=panel-heading>Accessories<div class=pull-right><div class=btn-group><button type=button class="btn btn-default btn-xs" id=add ng-click=addNewAccessory(order)>Add new accesory</button></div></div></div><div class=panel-body><div class=list-group><div class=list-group-item ng-class="" ng-repeat="accesory in order.ordered_accessories"><span class="label pull-right" ng-class="{\'list-group-item-success\': accesory.received, \'list-group-item-warning\': !accesory.received,\'list-group-item-danger\': !accesory.received }">Received {{accesory.items_received || 0}} / {{accesory.quantity}}</span><div class=checkbox><label><div><h4 class=list-group-item-heading>{{accesory.from_manufacturer}}</h4><h6>Date Received: {{accesory.date_received | date}}</h6><p class=list-group-item-text>{{ accesory.description }}</p></div></label></div></div></div></div></div>'),$templateCache.put("components/directives/order/order-details/order-details.html","<field ng-model=order.group ng-field=\"{title: 'Select Group', type: 'select', require: true, show_options: groupList()}\"></field><field ng-model=order.customer.name ng-field=\"{title:'Customer', type:'text', require: true}\"></field><field ng-model=order.po_number ng-field=\"{title:'P.O.#', type:'text', require: true}\"></field><field ng-model=order.date_required ng-field=\"{title:'Required Date', type:'date', require:true, show_options: [{showMinToday:true}]}\"></field><field ng-model=order.customer.bill_to ng-field=\"{title:'Bill To', type:'text'}\"></field><field ng-model=order.customer.ship_to ng-field=\"{title:'Ship To', type:'text', require:true}\"></field><field ng-model=order.customer.email ng-field=\"{title:'Email', type:'email'}\"></field><field ng-model=order.customer.phone ng-field=\"{title:'Contact Number', type:'text', require: true}\"></field><field ng-model=order.customer.cell ng-field=\"{title:'Secondary Number', type:'text'}\"></field><field ng-model=order.customer.is_private ng-field=\"{title:'Is Private', type:'checkbox'}\"></field><div ng-if=\"order._id && order.doors\" field ng-model=order.doors ng-field=\"{title: 'Doors', type: 'select', require: false, show_options: 'N/A, All Made in Shop, Some Made In Shop, All Ordered'}\"></div><forms module=Order list-of-forms=order.forms></forms>"),
$templateCache.put("components/directives/order/order-list/order-list.html",'<div class="panel panel-default"><div class=panel-heading><i class="fa fa-{{ listType }} fa-fw"></i> {{ title }}<div class=pull-right ng-if="listFieldsToEdit && !preview"><div class=btn-group><button type=button class="btn btn-default btn-xs" id=add ng-click=addNewField(editableForm)>Add new</button></div></div></div><!-- /.panel-heading --><div class=panel-body><form ng-submit=listSearch({selectedFilter:selectedFilter})><div class=row ng-if=searchFilter><div class=col-sm-12><div class=input-group><div class="input-group-btn search-panel"><button data-toggle=dropdown class="btn btn-default dropdown-toggle" type=button><span id=search_concept>{{ selectedFilter.label || \'Filter by\' }}</span> <span class=caret></span></button><ul role=menu class=dropdown-menu><li ng-repeat="filterBy in searchFilter track by $index"><a href="" ng-click="selectedFilter.text = \'\'; selectedFilter.label = filterBy.label;selectedFilter.query = filterBy.query;selectedFilter.api = filterBy.api;selectedFilter.itemId = null;">{{ filterBy.label }}</a></li></ul></div><input ng-show=!selectedFilter.api ng-model=selectedFilter.text placeholder="select filter by and type search" ng-disabled=!selectedFilter.label class=form-control> <input ng-show=selectedFilter.api placeholder="select filter by and type search" ng-disabled=!selectedFilter.label ng-model=selectedFilter.text typeahead="results.name for results in lookup($viewValue,selectedFilter.api)" typeahead-on-select="selectedResult($item, $model, $label)" typeahead-loading=loadingLocations class=form-control> <i ng-show=loadingLocations class="glyphicon glyphicon-refresh"></i> <span class=input-group-btn><button type=submit class="btn btn-default"><span class="glyphicon glyphicon-search"></span></button></span></div></div><hr></div></form><div class=list-group><a selected-item class=list-group-item ng-repeat="item in quickList | limitTo: itemsLimit()"><ng-transclude></ng-transclude></a></div><a href="" class="btn btn-default btn-block" ng-show=hasMoreItemsToShow() ng-click=showMoreItems()>Load next</a><div class=list-group-item ng-show=!quickList.length><h4 class=list-group-item-heading>Nothing to show</h4></div><!-- /.list-group --></div><div class=panel-footer ng-if=footerForms><div class=row><field ng-model=field.value ng-field=field action=field.action.click ng-repeat="field in footerForm"></field></div></div><div class=panel-footer ng-if=footerForm><div class=input-group><input placeholder="Type your message here..." class="form-control input-sm" id=btn-input ng-model=message> <span class=input-group-btn><button id=btn-chat class="btn btn-warning btn-sm" ng-click=sendMessage()>Send</button></span></div></div><!-- /.panel-body --></div>'),$templateCache.put("components/directives/order/order-notes/order-notes.html",'<div class="panel panel-default"><div class=panel-heading>Notes<div class=pull-right><div class=btn-group><button type=button class="btn btn-default btn-xs" id=add ng-click=addNewNote()>Add new note</button></div></div></div><div class=panel-body><div class=list-group><div class=list-group-item ng-class="{\'list-group-item-success\': note.resolved, \'list-group-item-warning\': !note.resolved}" ng-repeat="note in notes"><div class=row><div class=col-md-10><div class=checkbox><label><div><h4 class=list-group-item-heading>{{ note.from.name }} @ {{ note.posted_on | date }}</h4><p class=list-group-item-text>{{ note.content }}</p></div></label></div></div><div class=col-md-2><button type=button class="btn btn-default btn-xs" restricted-access ng-click=deleteNote($index,note)><span class="glyphicon glyphicon-trash"></span></button></div></div></div></div></div></div>'),$templateCache.put("components/directives/order/order-preview/order-preview.html",'<div class="panel panel-default"><div class=panel-heading>Order {{order.po_number}} <span class=pull-right><order-status></order-status><span class="label label-bright" ng-if=order.shipped_date>shipped @ {{order.shipped_date | date}}</span></span></div><div class=panel-body><table class=table><tbody><tr class=success><th>Customer</th><td>{{order.customer.name}}</td><th>Created by</th><td>{{order.createdBy.name}}</td></tr><tr class=success><th>Bill To</th><td>{{order.customer.bill_to}}</td><th>Ship To</th><td>{{order.customer.ship_to}}</td></tr><tr class=info><th>Email</th><td>{{order.customer.email}}</td><th>Contact Number</th><td>{{order.customer.phone}}</td></tr><tr class=info><th>Secondary Number</th><td>{{order.customer.cell}}</td><th>Doors</th><td>{{order.doors}}</td></tr><tr class=info><th>Date Required</th><td>{{order.date_required | date}}</td><th>Installation Date</th><td>{{(order.installation_date ? order.installation_date : order.date_required) | date}}</td></tr></tbody></table><uib-tabset><uib-tab ng-repeat="tab in tabs" active=tab.active disabled><uib-tab-heading><i class="glyphicon glyphicon-{{tab.icon}}"></i> {{tab.title}}</uib-tab-heading><div ng-include=tab.template></div></uib-tab></uib-tabset></div></div>'),$templateCache.put("components/directives/order/order-preview/tab-accessories.html","<order-accessories></order-accessories>"),$templateCache.put("components/directives/order/order-preview/tab-files.html",'<file-uploads model=order upload-url="/api/orders/{{ order._id }}/upload"></file-uploads>'),$templateCache.put("components/directives/order/order-preview/tab-forms.html","<forms module=Order list-of-forms=order.forms></forms>"),$templateCache.put("components/directives/order/order-preview/tab-notes.html","<order-notes></order-notes>"),$templateCache.put("components/directives/order/order-preview/tab-services.html",'<div class="panel panel-default"><div class=panel-heading>Services<div class=pull-right><div class=btn-group><button type=button class="btn btn-default btn-xs" id=add ng-click=addNewService(order)>Add new service</button></div></div></div><div class=panel-body><div class=list-group><order-services></order-services></div></div></div>'),$templateCache.put("components/directives/order/order-preview/tab-worklog.html","<work-log></work-log>"),$templateCache.put("components/directives/order/order-services/order-services.html",'<div class=list-group-item class=list-group-item-success><div><h4 class=list-group-item-heading>{{order.po_number}} - Installation <a ng-click="printService(order._id, \'Installation\')"><span class="glyphicon glyphicon-print"></span></a></h4><p class=list-group-item-text>{{ order.installation_date | date }}</p></div></div><div class=list-group-item ng-class="{\'list-group-item-success\': service.completed, \'list-group-item-warning\': !service.completed && service.approved,\'list-group-item-danger\': !service.completed && !service.approved }" ng-repeat="service in order.services"><span class="label label-default pull-right" ng-if="!service.approved && !service.completed">New, needs approval</span> <span class="label label-warning pull-right" ng-if="service.approved && !service.completed">Not completed</span> <span class="label label-success pull-right" ng-if="service.approved && service.completed">Completed</span><div class=checkbox><div class=row><div class=col-md-11><label><input type=checkbox ng-disabled=service.completed ng-model=service.completed ng-change="completed(order, service)" restricted-access=adminRoles,salesRepRoles ng-if=service.approved> <input type=checkbox ng-disabled=service.completed ng-model=service.approved ng-change="completed(order, service)" restricted-access=adminRoles,salesRepRoles ng-if=!service.approved><div><h4 class=list-group-item-heading>{{service.title}} - {{ service.date | date }} <a ng-click="printService(order._id, $index)"><span class="glyphicon glyphicon-print"></span></a></h4><h6>Done by {{service.done_by.name}}</h6><p class=list-group-item-text>{{ service.details }}</p></div></label></div><div class=col-md-1><button type=button class="btn btn-default pull-right" aria-label="Left Align" ng-tooltip="delete this service" ng-click="delete(order, $index)" restricted-access=adminRoles,salesRepRoles,serviceRepRoles><span class="glyphicon glyphicon-trash" aria-hidden=true></span></button></div></div></div></div>'),$templateCache.put("components/directives/services/services.html",'<div class="panel panel-danger"><div class=panel-heading><div class=row><div class=col-xs-3><i class="fa fa-wrench fa-5x"></i></div><div class="col-xs-9 text-right"><div class=huge>{{ totalOrders }}</div><div>New Services!</div><div></div></div></div></div><a href="" ng-click="isCollapsed = !isCollapsed"><div class=panel-footer><span class=pull-left>View services</span> <span class=pull-right><i class="fa fa-arrow-circle-right"></i></span><div class=clearfix></div></div></a><div><div class=list-group><div class=list-group-item class=list-group-item-success ng-repeat="order in orders"><div><h4 class=list-group-item-heading><a ng-href=/order/detail/{{order._id}}/Services>#{{order.po_number}} For: {{order.customer.name}} - Required By {{order.date_required | date}}</a></h4></div><order-services></order-services></div></div></div></div>'),$templateCache.put("components/directives/shippingList/shippingList.html",'<div class="panel panel-success"><div class=panel-heading>Shipping List <span class=badge>{{ totalOrders }}</span></div><div class=panel-body><div class=list-group ng-repeat="item in orders" ng-animate="\'animate\'"><shipping-list-item item=item ng-show=!item.shipped></shipping-list-item></div></div><div class=panel-footer><uib-pagination total-items=totalOrders ng-model=currentPage page=currentPage max-size=maxSize class=pagination-sm boundary-links=true rotate=false num-pages=numPages></uib-pagination><pre>Page: {{currentPage}} / {{numPages}}</pre></div></div>'),$templateCache.put("components/directives/shippingList/shippingListItem.html",'<span class=list-group-item><h4 class="list-group-item-heading active">{{item.po_number}} - {{item.customer.name}}</h4><p class=list-group-item-text><div class=row><div class=col-md-6><div class=form-group><label class="col-md-4 control-label">Ship To:</label><div class="form-control-static col-md-8">{{item.customer.ship_to ? item.customer.ship_to : item.customer.bill_to}}</div></div></div><div class=col-md-6><div class=row><div class=col-md-4>Shipping Date</div><div class=col-md-8><p class=input-group><input class=form-control uib-datepicker-popup={{format}} ng-model=item.shipped_date is-open=opened data-show-weeks=false data-show-today=false datepicker-options=dateOptions ng-required=true close-text="Close"> <span class=input-group-btn><button type=button class="btn btn-default" ng-click=open($event)><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></div></div></div></p></span>'),$templateCache.put("components/directives/work-log/work-log.html",'<div class="panel panel-primary"><div class=panel-heading><span class="glyphicon glyphicon-tasks">&nbsp;</span> <span>Work Log</span></div><div class=panel-body><div class=panel-group id=accordion role=tablist aria-multiselectable=true><div class="panel panel-default" ng-repeat="item in orders"><div class=panel-heading role=tab id=heading{{$index}}><h4 class=panel-title><a data-toggle=collapse data-parent=#accordion href=#collapse{{$index}}>{{getOrderTitle(item)}}</a></h4></div><div id=collapse{{$index}} class=panel-collapse role=tabpanel aria-labelledby=heading{{$index}}><div class=panel-body><uib-tabset><uib-tab ng-if="form.tasks.length>0" ng-repeat="form in item.forms" active=form.active><uib-tab-heading>{{form.formName}}&nbsp; <span class=pull-right><button ng-click="setTaskStatus(item, $parent.$parent.$index, form, $parent.$index, null, \'done\', $event)" title="Finish all tasks" class="btn btn-xs"><span class="glyphicon glyphicon-check" aria-hidden=true></span></button></span></uib-tab-heading><div class=well><div class=row><div class=col-md-4>To Do<ul class=list-group><li class="list-group-item list-group-item-info" ng-show=!task.status ng-repeat="task in form.tasks | orderBy:\'priority\':false"><span class=pull-right><button ng-click="setTaskStatus(item, $parent.$parent.$index, form, $parent.$index, task, \'in progress\', $event)" class="btn btn-xs"><span class="glyphicon glyphicon-play" aria-hidden=true></span></button></span> {{ task.title }}</li></ul></div><div class=col-md-4>In Progress<ul class=list-group><li class="list-group-item list-group-item-warning" ng-repeat="task in form.tasks | filter:{status:\'in progress\'}"><span class=pull-right><button ng-click="setTaskStatus(item, $parent.$parent.$index, form, $parent.$index, task, \'done\', $event)" class="btn btn-xs"><span class="glyphicon glyphicon-check" aria-hidden=true></span></button></span> {{ task.title }}</li></ul></div><div class=col-md-4>Done<ul class=list-group><li class="list-group-item list-group-item-success" ng-repeat="task in form.tasks | filter:{status:\'done\'}"><span class=pull-right><button ng-click="deleteTaskStatus(item, $parent.$parent.$index, form, $parent.$index, task, $event)" class="btn btn-xs"><span class="glyphicon glyphicon-remove-sign" aria-hidden=true></span></button></span> {{ task.title }}</li></ul></div></div></div></uib-tab></uib-tabset></div></div></div></div><uib-pagination ng-model=currentPage total-items=totalOrders page=currentPage max-size=maxSize class=pagination-sm boundary-links=true rotate=false num-pages=numPages></uib-pagination><pre>Page: {{currentPage}} / {{numPages}}</pre></div></div>'),$templateCache.put("components/modal/modal.html",'<div class=modal-header><button ng-if=modal.dismissable type=button ng-click=$dismiss() class=close>&times;</button><h4 ng-if=modal.title ng-bind=modal.title class=modal-title></h4></div><div class=modal-body><p ng-if=modal.text ng-bind=modal.text></p><div ng-if=modal.html ng-bind-html=modal.html></div><form ng-if=modal.form role=form class=form-horizontal><div class=row><div field ng-model=field.value ng-field=field ng-repeat="field in fields"></div>\'</div></form></div><div class=modal-footer><button ng-if=modal.buttons ng-repeat="button in modal.buttons" ng-class=button.classes ng-click=button.click($event) ng-bind=button.text class=btn></button> <button ng-if=!modal.buttons class="btn btn-primary" ng-click=ok()>OK</button> <button ng-if=!modal.buttons class="btn btn-warning" ng-click=cancel()>Cancel</button></div>'),$templateCache.put("components/navbar/navbar.html",'<div class="navbar navbar-default navbar-static-top" ng-controller=NavbarCtrl><div class=container><div class=navbar-header><button class=navbar-toggle type=button ng-click="isCollapsed = !isCollapsed"><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a href="/" class=navbar-brand>the-boss</a></div><div uib-collapse=isCollapsed class="navbar-collapse collapse" id=navbar-main><ul class="nav navbar-nav"><li ng-hide=!isLoggedIn() ng-repeat="item in menu" ng-class="{active: isActive(item.link)}"><a ng-href={{item.link}}>{{item.title}}</a></li><li restricted-access=adminRoles,salesRepRoles,serviceRepRoles ng-class="{active: isActive(\'/order/detail\')}"><a href=/order/detail>Add Order</a></li></ul><ul class="nav navbar-nav navbar-right"><li ng-hide=isLoggedIn() ng-class="{active: isActive(\'/login\')}"><a href=/login>Login</a></li><li ng-show=isLoggedIn()><p class=navbar-text>Hello {{ getCurrentUser().name }} <span class="label label-default label-group"><i ng-repeat="group in getCurrentUser().groups">[{{group}}]</i></span></p></li><li alerts></li><li class=dropdown><a class=dropdown-toggle data-toggle=dropdown href=#><i class="fa fa-user fa-fw"></i> <i class="fa fa-caret-down"></i></a><ul class="dropdown-menu pull-right" role=menu><li><a href=/settings><i class="fa fa-user fa-fw"></i> User settings</a></li><li restricted-access=adminRoles><a href=/user><i class="fa fa-gear fa-fw"></i> Users</a></li><li class=divider></li><li><a href="" ng-click=logout()><i class="fa fa-sign-out fa-fw"></i> Logout</a></li></ul></li></ul></div></div></div>')}]);